{"version":3,"sources":["webpack:///./.linaria-cache/src/components/common/Modal/Modal.linaria.css?537a","webpack:///./.linaria-cache/src/components/modals/AddCoinModal/AddCoinModal.linaria.css?b8bd","webpack:///./.linaria-cache/src/components/modals/AddCoinModal/TokenList/TokenList.linaria.css?5a1c","webpack:///./.linaria-cache/src/components/modals/AddCoinModal/TokenRow/TokenRow.linaria.css?29a3","webpack:///src/components/common/Modal/Modal.tsx","webpack:///./src/components/common/Modal/index.ts","webpack:///src/components/modals/AddCoinModal/AddCoinModal.tsx","webpack:///src/components/modals/AddCoinModal/TokenList/TokenList.tsx","webpack:///./src/components/modals/AddCoinModal/TokenList/index.ts","webpack:///src/components/modals/AddCoinModal/TokenRow/TokenRow.tsx","webpack:///./src/components/modals/AddCoinModal/TokenRow/index.ts","webpack:///./src/components/modals/AddCoinModal/index.ts"],"names":["Wrapper","Header","Title","Description","CloseWrapper","CloseIcon","Content","Modal","className","title","description","close","children","WrapperModal","ScrollableContainer","AddCoinModal","dispatch","useDispatch","cluster","useSelector","state","tokenAccounts","token","TokenAccount","availableTokens","Token","isMainnetEntrypoint","clusterApiUrl","handleMintTestTokenClick","createMint","amount","decimals","initialAccount","closeModal","filteredTokens","useMemo","existsMintAccounts","TokenList","items","ChevronWrapper","ChevronIcon","Main","InfoWrapper","Info","Top","Bottom","Additional","CopyWrapper","CopyIcon","TokenRow","inputRef","useRef","useState","handleChevronClick","setIsOpen","handleAddClick","createAccountForToken","handleCopyClick","input","document","classNames","opened","isOpen","symbol"],"mappings":";;;;;;;;;;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAEA,MAAMA,OAAO;AAAA;AAAA;AAAA,EAAb;AAUA,MAAMC,MAAM;AAAA;AAAA;AAAA,EAAZ;AAQA,MAAMC,KAAK;AAAA;AAAA;AAAA,EAAX;AAOA,MAAMC,WAAW;AAAA;AAAA;AAAA,EAAjB;AAQA,MAAMC,YAAY;AAAA;AAAA;AAAA,EAAlB;AAEA,MAAMC,SAAS;AAAA;AAAA;AAAA,EAAf;AAWA,MAAMC,OAAO;AAAA;AAAA;AAAA,EAAb;AASO,MAAMC,KAA+B,GAAG,CAAC;AAAA;AAAA;AAAA;AAAA;AAK9CC;AAL8C,CAAD,KAMzC;AACJ,sBACE;AAAS,eAAT;AAAA,kBACE,yEACGC,KAAK,gBAAG,wEAAH,KAAG,CAAH,GAAN,SADF,EAEGC,WAAW,gBAAG,8EAAH,WAAG,CAAH,GAAZ,SAFF,EAGGC,KAAK,gBACJ;AAAc,aAAd;AAAA,kBACE;AAAW,UAAX;AAAA,IADF,CADI,GAAN,SAHF,CADF,EAUGC,QAAQ,gBAAG,0EAAH,QAAG,CAAH,GAAT,SAVF,CADF;AAPK;;;;;;;;;;;;;;AC9DP;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAEA,MAAMC,YAAY;AAAA;AAAA;AAAA,EAAlB;AAIA,MAAMC,mBAAmB;AAAA;AAAA;AAAA,EAAzB;AAcO,MAAMC,YAAsC,GAAG,CAAC;AAAEJ;AAAF,CAAD,KAAe;AACnE,QAAMK,QAAQ,GAAGC,+DAAjB;AACA,QAAMC,OAAO,GAAGC,+DAAW,CAAC,SAAsBC,KAAK,CAALA,OAAlD,OAA2B,CAA3B;AACA,QAAMC,aAAa,GAAGF,+DAAW,CAAC,SAChCC,KAAK,CAALA,yBAAgCE,KAAD,IAAWC,oEAAY,CAAZA,KAD5C,KAC4CA,CAA1CH,CAD+B,CAAjC;AAGA,QAAMI,eAAe,GAAGL,+DAAW,CAAC,SAClCC,KAAK,CAALA,2BAAkCE,KAAD,IAAWG,sDAAK,CAALA,KAD9C,KAC8CA,CAA5CL,CADiC,CAAnC;AAIA,QAAMM,mBAAmB,GAAGR,OAAO,KAAKS,qEAAa,CAArD,cAAqD,CAArD;;AAEA,QAAMC,wBAAwB,GAAG,MAAM;AACrCZ,YAAQ,CAACa,+EAAU,CAAC;AAAEC,YAAM,EAAR;AAAgBC,cAAQ,EAAxB;AAA6BC,oBAAc,EAAE;AAA7C,KAAD,CAAX,CAARhB;AADF;;AAIA,QAAMiB,UAAU,GAAG,MAAM;AACvBtB,SAAK;AADP;;AAIA,QAAMuB,cAAc,GAAGC,qDAAO,CAAC,MAAM;AACnC,QAAI,CAAJ,iBAAsB;AACpB;AACD;;AAED,UAAMC,kBAAkB,GAAG,QAAQf,aAAa,CAAbA,IAAmBC,KAAD,IAAWA,KAAK,CAALA,aAAhE,QAAgEA,EAA7BD,CAAR,CAA3B;AAEA,WAAOG,eAAe,CAAfA,OAAwBF,KAAD,IAAW,CAACc,kBAAkB,CAAlBA,IAAuBd,KAAK,CAALA,QAAjE,QAAiEA,EAAvBc,CAAnCZ,CAAP;AAP4B,KAQ3B,CARH,eAQG,CAR2B,CAA9B;AAUA,sBACE;AACE,WADF;AAEE,8BACE,+KAEG,oCACC,wHACE,GADF,eAEE;AAAQ,UAAR;AAAa,eAAb;AAAA,yBAFF,CADD,GAAD,IAFF,CAHJ;AAeE,WAfF;AAAA,KAgBGU,eAAc,SAAdA,kBAAc,WAAdA,0BAAc,CAAdA,uBACC,mGACE;AAAW,WAAX;AAAkC,gBAAlC;AAAA,IADF,CADDA,GAAD,SAhBF,CADF;AA9BK;;;;;;;;;;;;;;AClCP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AAEA,MAAMlC,OAAO;AAAA;AAAA;AAAA,EAAb;AAUO,MAAMqC,SAAmC,GAAG,CAAC;AAAA;AAASJ;AAAT,CAAD,KAA2B;AAC5E,MAAI,CAAJ,OAAY;AACV;AACD;;AAED,sBACE,0EACGK,KAAK,CAALA,IAAWhB,KAAD,iBACT;AAAU,SAAKA,KAAK,CAALA,QAAf,QAAeA,EAAf;AAAyC,WAAzC;AAAuD,gBADzD;AACE,IADDgB,CADH,CADF;AALK;;;;;;;;;;;;;;ACnBP;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAIA;AACA;AAEA;AAEA,MAAMtC,OAAO;AAAA;AAAA;AAAA,EAAb;AAWA,MAAMuC,cAAc;AAAA;AAAA;AAAA,EAApB;AAWA,MAAMC,WAAW;AAAA;AAAA;AAAA,EAAjB;AAOA,MAAMC,IAAI;AAAA;AAAA;AAAA,EAAV;AAIA,MAAMnC,OAAO;AAAA;AAAA;AAAA,EAAb;AAKA,MAAMoC,WAAW;AAAA;AAAA;AAAA,EAAjB;AAQA,MAAMC,IAAI;AAAA;AAAA;AAAA,EAAV;AAQA,MAAMC,GAAG;AAAA;AAAA;AAAA,EAAT;AAQA,MAAMC,MAAM;AAAA;AAAA;AAAA,EAAZ;AAUA,MAAMC,UAAU;AAAA;AAAA;AAAA,EAAhB;AASA,MAAMC,WAAW;AAAA;AAAA;AAAA,EAAjB;AAIA,MAAMC,QAAQ;AAAA;AAAA;AAAA,EAAd;AAUO,MAAMC,QAAkC,GAAG,CAAC;AAAA;AAAShB;AAAT,CAAD,KAA2B;AAC3E,QAAMjB,QAAQ,GAAGC,+DAD0D,EAC3E,CAD2E,CAE3E;;AACA,QAAMiC,QAAQ,GAAGC,oDAAM,CAAvB,IAAuB,CAAvB;AACA,QAAM,sBAAsBC,sDAAQ,CAApC,KAAoC,CAApC;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BC,aAAS,CAAC,CAAVA,MAAS,CAATA;AADF;;AAIA,QAAMC,cAAc,GAAG,YAAY;AACjC,UAAMvC,QAAQ,CAACwC,0FAAqB,CAAC;AAAElC;AAAF,KAAD,CAAtB,CAAd,CADiC,CAEjC;;AACAW,cAAU;AAHZ;;AAMA,QAAMwB,eAAe,GAAG,MAAM;AAC5B,UAAMC,KAAK,GAAGR,QAAQ,CAAtB;;AAEA,eAAW;AACTQ,WAAK,CAALA;AACAA,WAAK,CAALA,qBAA2BA,KAAK,CAALA,MAA3BA;AACAC,cAAQ,CAARA;AACD;AAPH;;AAUA,sBACE,uFACE;AAAgB,aAAhB;AAA6C,eAAWC,iDAAU,CAAC;AAAEC,YAAM,EAAEC;AAAV,KAAD;AAAlE,kBACE;AAAa,UAAb;AAAA,IADF,CADF,eAIE,oFACE,uFACE;AAAa,aAAb;AAAA,kBACE;AAAa,YAAQxC,KAAK,CAA1B;AAAmC,UAAnC;AAAA,IADF,eAEE,oFACE,mFACE,wEAAMA,KAAK,CAAN,MAAL,CADF,oBAC4B,uEAD5B,CADF,eAIE,sFACE,wEAAMA,KAAK,CAAN,IAAL,CADF,oBAC0B,uEAD1B,CAJF,CAFF,CADF,eAYE;AAAQ,WAAR;AAAgB,SAAhB;AAAsB,aAAtB;AAAA,WAZF,CADF,eAiBE;AAAY,eAAWsC,iDAAU,CAAC;AAAEC,YAAM,EAAEC;AAAV,KAAD;AAAjC,kBACE;AACE,SADF;AAEE,WAAQ,GAAExC,KAAK,CAACyC,MAFlB;AAGE,WAAOzC,KAAK,CAALA,QAHT,QAGSA,EAHT;AAIE,YAJF;AAKE,0BACE;AAAa,eAAb;AAAA,oBACE;AAAU,YAAV;AAAA,MADF;AANJ,IADF,CAjBF,CAJF,CADF;AA1BK;;;;;;;;;;;;;;AC7GP;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA","file":"0.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import React, { FunctionComponent } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { rgba } from 'polished';\n\nimport { Icon } from 'components/ui';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n\n  background-color: #fff;\n  border-radius: 15px;\n`;\n\nconst Header = styled.div`\n  position: relative;\n\n  padding: 20px 30px;\n\n  border-bottom: 1px solid ${rgba('#000', 0.05)};\n`;\n\nconst Title = styled.div`\n  color: #000;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 100%;\n`;\n\nconst Description = styled.div`\n  margin-top: 10px;\n\n  color: ${rgba('#000', 0.5)};\n  font-size: 14px;\n  line-height: 17px;\n`;\n\nconst CloseWrapper = styled.div``;\n\nconst CloseIcon = styled(Icon)`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n\n  width: 32px;\n  height: 32px;\n\n  cursor: pointer;\n`;\n\nconst Content = styled.div``;\n\ntype Props = {\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  close?: () => void;\n  className?: string;\n};\n\nexport const Modal: FunctionComponent<Props> = ({\n  title,\n  description,\n  close,\n  children,\n  className,\n}) => {\n  return (\n    <Wrapper className={className}>\n      <Header>\n        {title ? <Title>{title}</Title> : undefined}\n        {description ? <Description>{description}</Description> : undefined}\n        {close ? (\n          <CloseWrapper onClick={close}>\n            <CloseIcon name=\"close\" />\n          </CloseWrapper>\n        ) : undefined}\n      </Header>\n      {children ? <Content>{children}</Content> : undefined}\n    </Wrapper>\n  );\n};\n","export { Modal } from './Modal';\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { styled } from '@linaria/react';\nimport { Account, clusterApiUrl } from '@solana/web3.js';\n\nimport { Token } from 'api/token/Token';\nimport tokenConfig from 'api/token/token.config';\nimport { TokenAccount } from 'api/token/TokenAccount';\nimport { Modal } from 'components/common/Modal';\nimport { Button } from 'components/ui';\nimport { createMint } from 'features/wallet/WalletSlice';\nimport { RootState } from 'store/rootReducer';\n\nimport { TokenList } from './TokenList';\n\nconst WrapperModal = styled(Modal)`\n  flex-basis: 588px;\n`;\n\nconst ScrollableContainer = styled.div`\n  max-height: 668px;\n  padding-bottom: 20px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar-track {\n    margin-bottom: 16px;\n  }\n`;\n\ntype Props = {\n  close: () => void;\n};\n\nexport const AddCoinModal: FunctionComponent<Props> = ({ close }) => {\n  const dispatch = useDispatch();\n  const cluster = useSelector((state: RootState) => state.wallet.cluster);\n  const tokenAccounts = useSelector((state: RootState) =>\n    state.wallet.tokenAccounts.map((token) => TokenAccount.from(token)),\n  );\n  const availableTokens = useSelector((state: RootState) =>\n    state.global.availableTokens.map((token) => Token.from(token)),\n  );\n\n  const isMainnetEntrypoint = cluster === clusterApiUrl('mainnet-beta');\n\n  const handleMintTestTokenClick = () => {\n    dispatch(createMint({ amount: 1000, decimals: 2, initialAccount: new Account() }));\n  };\n\n  const closeModal = () => {\n    close();\n  };\n\n  const filteredTokens = useMemo(() => {\n    if (!availableTokens) {\n      return;\n    }\n\n    const existsMintAccounts = new Set(tokenAccounts.map((token) => token.mint.address.toBase58()));\n\n    return availableTokens.filter((token) => !existsMintAccounts.has(token.address.toBase58()));\n  }, [availableTokens]);\n\n  return (\n    <WrapperModal\n      title=\"Add coins\"\n      description={\n        <>\n          Add a token to your wallet. This will cost some SOL\n          {!isMainnetEntrypoint ? (\n            <>\n              {' '}\n              <Button link onClick={handleMintTestTokenClick}>\n                Mint test token\n              </Button>\n            </>\n          ) : null}\n        </>\n      }\n      close={close}>\n      {filteredTokens?.length ? (\n        <ScrollableContainer>\n          <TokenList items={filteredTokens} closeModal={closeModal} />\n        </ScrollableContainer>\n      ) : undefined}\n    </WrapperModal>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { styled } from '@linaria/react';\n\nimport { Token } from 'api/token/Token';\nimport { TokenType } from 'constants/tokens';\n\nimport { TokenRow } from '../TokenRow';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-gap: 2px;\n`;\n\ntype Props = {\n  items?: Token[];\n  closeModal: () => void;\n};\n\nexport const TokenList: FunctionComponent<Props> = ({ items, closeModal }) => {\n  if (!items) {\n    return null;\n  }\n\n  return (\n    <Wrapper>\n      {items.map((token) => (\n        <TokenRow key={token.address.toBase58()} token={token} closeModal={closeModal} />\n      ))}\n    </Wrapper>\n  );\n};\n","export { TokenList } from './TokenList';\n","import React, { FunctionComponent, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { styled } from '@linaria/react';\nimport * as web3 from '@solana/web3.js';\nimport classNames from 'classnames';\nimport { rgba } from 'polished';\n\nimport { Token } from 'api/token/Token';\nimport { TokenAvatar } from 'components/common/TokenAvatar';\nimport { Avatar, Button, Icon, Input } from 'components/ui';\nimport { TokenType } from 'constants/tokens';\nimport { createAccountForToken } from 'features/wallet/WalletSlice';\n\nconst Wrapper = styled.div`\n  display: flex;\n  padding: 15px 30px;\n\n  border-bottom: 1px solid ${rgba('#000', 0.05)};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst ChevronWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 44px;\n  margin-right: 12px;\n\n  &.opened {\n    transform: rotate(180deg);\n  }\n`;\n\nconst ChevronIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n\n  color: ${rgba('#000', 0.4)};\n`;\n\nconst Main = styled.div`\n  flex: 1;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  margin-right: 48px;\n\n  cursor: pointer;\n`;\n\nconst Info = styled.div`\n  flex: 1;\n  margin-left: 20px;\n\n  font-size: 14px;\n  line-height: 17px;\n`;\n\nconst Top = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  color: #000;\n  font-weight: 500;\n`;\n\nconst Bottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 4px;\n\n  color: ${rgba('#000', 0.5)};\n  font-size: 14px;\n  line-height: 17px;\n`;\n\nconst Additional = styled.div`\n  display: none;\n  margin-top: 20px;\n\n  &.opened {\n    display: block;\n  }\n`;\n\nconst CopyWrapper = styled.div`\n  cursor: pointer;\n`;\n\nconst CopyIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n`;\n\ntype Props = {\n  token: Token;\n  closeModal: () => void;\n};\n\nexport const TokenRow: FunctionComponent<Props> = ({ token, closeModal }) => {\n  const dispatch = useDispatch();\n  // eslint-disable-next-line unicorn/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleChevronClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleAddClick = async () => {\n    await dispatch(createAccountForToken({ token }));\n    // dispatch(getOwnedTokenAccounts());\n    closeModal();\n  };\n\n  const handleCopyClick = () => {\n    const input = inputRef.current;\n\n    if (input) {\n      input.focus();\n      input.setSelectionRange(0, input.value.length);\n      document.execCommand('copy');\n    }\n  };\n\n  return (\n    <Wrapper>\n      <ChevronWrapper onClick={handleChevronClick} className={classNames({ opened: isOpen })}>\n        <ChevronIcon name=\"chevron\" />\n      </ChevronWrapper>\n      <Main>\n        <Content>\n          <InfoWrapper onClick={handleChevronClick}>\n            <TokenAvatar symbol={token.symbol} size={44} />\n            <Info>\n              <Top>\n                <div>{token.symbol}</div> <div />\n              </Top>\n              <Bottom>\n                <div>{token.name}</div> <div />\n              </Bottom>\n            </Info>\n          </InfoWrapper>\n          <Button primary small onClick={handleAddClick}>\n            Add\n          </Button>\n        </Content>\n        <Additional className={classNames({ opened: isOpen })}>\n          <Input\n            ref={inputRef}\n            title={`${token.symbol} Mint Address`}\n            value={token.address.toBase58()}\n            readOnly\n            postfix={\n              <CopyWrapper onClick={handleCopyClick}>\n                <CopyIcon name=\"copy\" />\n              </CopyWrapper>\n            }\n          />\n        </Additional>\n      </Main>\n    </Wrapper>\n  );\n};\n","export { TokenRow } from './TokenRow';\n","// eslint-disable-next-line import/no-default-export\nexport { AddCoinModal as default } from './AddCoinModal';\n"],"sourceRoot":""}