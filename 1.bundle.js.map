{"version":3,"sources":["webpack:///./.linaria-cache/src/components/common/Modal/Modal.linaria.css","webpack:///src/components/common/Modal/Modal.tsx","webpack:///./.linaria-cache/src/components/modals/AddCoinModal/TokenRow/TokenRow.linaria.css","webpack:///./.linaria-cache/src/components/modals/AddCoinModal/TokenList/TokenList.linaria.css","webpack:///./.linaria-cache/src/components/modals/AddCoinModal/AddCoinModal.linaria.css","webpack:///src/components/modals/AddCoinModal/TokenRow/TokenRow.tsx","webpack:///src/components/modals/AddCoinModal/TokenList/TokenList.tsx","webpack:///src/components/modals/AddCoinModal/AddCoinModal.tsx"],"names":["Wrapper","Header","Title","Description","CloseWrapper","CloseIcon","Content","Modal","className","title","description","close","onClick","name","children","ChevronWrapper","ChevronIcon","Main","InfoWrapper","Info","Top","Bottom","Additional","PlusIconWrapper","PlusIcon","BottomInfo","LeftInfo","RightInfo","TokenRow","closeModal","dispatch","useDispatch","inputRef","useRef","isOpen","setIsOpen","useState","handleChevronClick","classNames","opened","symbol","token","size","ref","value","readOnly","primary","async","createAccountForToken","error","InputWrapper","SearchIcon","TokenList","filterValue","setFilter","filteredItems","items","item","placeholder","onChange","searchValue","e","key","WrapperModal","ScrollableContainer","AddCoinModal","tokenAccounts","useSelector","state","TokenAccount","availableTokens","Token","filteredTokens","useMemo","existsMintAccounts","Set"],"mappings":"0FAAA,Q,wGCOA,MAAMA,EAAO,qDAUPC,EAAM,qDAQNC,EAAK,oDAOLC,EAAW,yDAQXC,EAAY,2DAiBZC,EAAS,sDAOTC,EAAO,sDASAC,EAAkC,EAAC,yCAK9CC,eAGE,qBAASA,UAAT,GACE,yBACGC,EAAQ,yBAAH,QAAN,EACCC,EAAc,yBAAH,QAAZ,EACCC,EACC,qBAAcC,QAAd,GACE,qBAAWC,KAAX,gBAFJ,GAMDC,EAAW,yBAAH,QAAT,G,yCC3FN,Q,iCCAA,Q,iCCAA,Q,sLCYA,MAAMd,EAAO,qDAMPe,EAAc,4DAwBdC,EAAW,wDAOXC,EAAI,mDAUJX,EAAO,sDAaPY,EAAW,yDAQXC,EAAI,kDAQJC,EAAG,kDAUHC,EAAM,qDAUNC,EAAU,wDAwCVC,EAAe,6DAIfC,EAAQ,oDAIRC,EAAU,yDAiBVC,EAAQ,uDAMRC,EAAS,wDAiBFC,EAAqC,EAAC,QAASC,iBAC1D,MAAMC,EAAWC,cAEXC,EAAWC,iBAAjB,OACOC,EAAQC,GAAaC,oBAA5B,GAEMC,EAAqB,KACzBF,OAsBF,OACE,yBACE,qBAAM3B,UAAW8B,IAAW,CAAEC,OAAQL,KACpC,qBAAS1B,UAAW8B,IAAW,CAAEC,OAAQL,KACvC,qBAAatB,QAAb,GACE,uBAAa4B,OAAQC,EAArB,OAAmCC,KAAnC,KACA,yBACE,yBACE,6BAAMD,EAAD,QADP,IAC4B,+BAE5B,yBACE,6BAAMA,EAAD,MADP,IAC0B,iCAI9B,qBAAgB7B,QAAhB,EAA6CJ,UAAW8B,IAAW,CAAEC,OAAQL,KAC3E,qBAAarB,KAAb,cAGJ,qBAAYL,UAAW8B,IAAW,CAAEC,OAAQL,KAC1C,uBACES,IADF,EAEElC,MAAUgC,EAAMD,OAAR,gBACRI,MAAOH,UAHT,WAIEI,UAJF,IAMA,uBAAQC,SAAR,EAAgBlC,QA7CDmC,gBACfjB,EAASkB,YAAsB,CAAEP,WAEvCZ,MA2CQ,yBACE,qBAAUhB,KAAV,UAFJ,cAOF,qBAAYL,UAAW8B,IAAW,CAAEC,OAAF,EAAkBU,OAnC1D,KAuCU,oCACE,oDACA,wD,OC/Pd,MAAMjD,EAAO,sDAKPkD,EAAY,0DAeZC,EAAU,sDAgBHC,EAAsC,EAAC,QAASvB,iBAC3D,MACE,YAGF,MAAOwB,EAAaC,GAAalB,mBAAjC,IAOMmB,EACJF,WACIG,SAAcC,IAAD,uBAAUA,gBAAV,aAAUA,yBAD3BJ,KADF,EAKA,OACE,yBACE,yBACE,qBAAYxC,KAAZ,WACA,uBAAO6C,YAAP,eAAkCd,MAAlC,EAAsDe,SAdjC,IACzB,MAAMC,EAAcC,sBAApB,cACAP,SAcGC,MAAmBd,GAClB,qBAAUqB,IAAKrB,UAAf,WAAyCA,MAAzC,EAAuDZ,WADzD,O,OCxDN,MAAMkC,EAAY,uDAIZC,EAAmB,kEAcZC,EAAyC,EAAGtD,YACvD,MAAMuD,EAAgBC,YAAY,GAChCC,2BAAgC3B,GAAU4B,SAD5C,KAGMC,EAAkBH,YAAY,GAClCC,6BAAkC3B,GAAU8B,SAD9C,KAQMC,EAAiBC,kBAAQ,KAC7B,MACE,OAGF,MAAMC,EAAqB,IAAIC,IAAIT,MAAmBzB,GAAUA,eAAhE,aAEA,OAAO6B,SAAwB7B,IAAWiC,MAAuBjC,UAAjE,cACC,CARH,IAUA,OACE,qBAAchC,MAAd,YAAgCE,MAAhC,IACG6D,yBACC,yBACE,qBAAWhB,MAAX,EAAkC3B,WAlBvB,KACjBlB,aAeE,I","file":"1.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import React, { FunctionComponent } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { rgba } from 'polished';\n\nimport { Icon } from 'components/ui';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n\n  background-color: #fff;\n  border-radius: 15px;\n`;\n\nconst Header = styled.div`\n  position: relative;\n\n  padding: 20px 30px;\n\n  border-bottom: 1px solid ${rgba('#000', 0.05)};\n`;\n\nconst Title = styled.div`\n  color: #000;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 100%;\n`;\n\nconst Description = styled.div`\n  margin-top: 10px;\n\n  color: ${rgba('#000', 0.5)};\n  font-size: 14px;\n  line-height: 17px;\n`;\n\nconst CloseWrapper = styled.div`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n\n  background: #f6f6f8;\n  border-radius: 8px;\n\n  cursor: pointer;\n`;\n\nconst CloseIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n\n  color: #a3a5ba;\n`;\n\nconst Content = styled.div``;\n\ntype Props = {\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  close?: () => void;\n  className?: string;\n};\n\nexport const Modal: FunctionComponent<Props> = ({\n  title,\n  description,\n  close,\n  children,\n  className,\n}) => {\n  return (\n    <Wrapper className={className}>\n      <Header>\n        {title ? <Title>{title}</Title> : undefined}\n        {description ? <Description>{description}</Description> : undefined}\n        {close ? (\n          <CloseWrapper onClick={close}>\n            <CloseIcon name=\"close\" />\n          </CloseWrapper>\n        ) : undefined}\n      </Header>\n      {children ? <Content>{children}</Content> : undefined}\n    </Wrapper>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import React, { FunctionComponent, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { styled } from '@linaria/react';\nimport classNames from 'classnames';\nimport { rgba } from 'polished';\n\nimport { Token } from 'api/token/Token';\nimport { TokenAvatar } from 'components/common/TokenAvatar';\nimport { Button, Icon, Input } from 'components/ui';\nimport { createAccountForToken } from 'store/slices/wallet/WalletSlice';\n\nconst Wrapper = styled.div`\n  display: flex;\n\n  padding-top: 10px;\n`;\n\nconst ChevronWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 24px;\n  height: 24px;\n\n  color: #a3a5ba;\n\n  background: #f6f6f8;\n  border-radius: 8px;\n  transform: rotate(270deg);\n\n  &.opened {\n    background: #a3a5ba;\n    transform: rotate(0deg);\n\n    & svg {\n      color: #fff;\n    }\n  }\n`;\n\nconst ChevronIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n\n  color: ${rgba('#000', 0.4)};\n`;\n\nconst Main = styled.div`\n  flex: 1;\n\n  padding: 0 30px;\n\n  &.opened {\n    background: ${rgba('#f6f6f8', 0.5)};\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n\n  padding: 10px 0;\n\n  &.opened {\n    padding-bottom: 20px;\n\n    border-bottom: 1px dashed ${rgba('#000', 0.05)};\n  }\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  margin-right: 48px;\n\n  cursor: pointer;\n`;\n\nconst Info = styled.div`\n  flex: 1;\n  margin-left: 20px;\n\n  font-size: 14px;\n  line-height: 17px;\n`;\n\nconst Top = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  color: #202020;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 27px;\n`;\n\nconst Bottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 4px;\n\n  color: ${rgba('#000', 0.5)};\n  font-size: 14px;\n  line-height: 16px;\n`;\n\nconst Additional = styled.div`\n  display: none;\n\n  margin-top: 15px;\n\n  &.opened {\n    display: flex;\n    align-items: center;\n\n    padding-bottom: 15px;\n\n    border-bottom: 1px dashed ${rgba('#000', 0.05)};\n  }\n\n  & label {\n    flex: 1;\n\n    height: 44px;\n\n    padding: 0;\n\n    background: inherit;\n\n    & div {\n      font-size: 14px;\n      line-height: 16px;\n    }\n\n    & input {\n      font-weight: 600;\n      font-size: 13px;\n      line-height: 16px;\n    }\n  }\n\n  & button {\n    height: 44px;\n  }\n`;\n\nconst PlusIconWrapper = styled.div`\n  padding-right: 5px;\n`;\n\nconst PlusIcon = styled(Icon)`\n  width: 24px;\n`;\n\nconst BottomInfo = styled.div`\n  display: none;\n\n  font-weight: 600;\n  font-size: 14px;\n\n  &.opened {\n    display: flex;\n\n    padding: 15px 0;\n  }\n\n  &.error {\n    justify-content: center;\n  }\n`;\n\nconst LeftInfo = styled.div`\n  flex: 1;\n\n  color: #a3a5ba;\n`;\n\nconst RightInfo = styled.div`\n  color: #5887ff;\n\n  &.error {\n    color: #f43f3d;\n  }\n`;\n\nconst Error = styled.div`\n  color: #f43f3d;\n`;\n\ntype Props = {\n  token: Token;\n  closeModal: () => void;\n};\n\nexport const TokenRow: FunctionComponent<Props> = ({ token, closeModal }) => {\n  const dispatch = useDispatch();\n  // eslint-disable-next-line unicorn/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleChevronClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleAddClick = async () => {\n    await dispatch(createAccountForToken({ token }));\n    // dispatch(getTokenAccounts());\n    closeModal();\n  };\n\n  const handleCopyClick = () => {\n    const input = inputRef.current;\n\n    if (input) {\n      input.focus();\n      input.setSelectionRange(0, input.value.length);\n      document.execCommand('copy');\n    }\n  };\n\n  // TODO\n  const isError = false;\n\n  return (\n    <Wrapper>\n      <Main className={classNames({ opened: isOpen })}>\n        <Content className={classNames({ opened: isOpen })}>\n          <InfoWrapper onClick={handleChevronClick}>\n            <TokenAvatar symbol={token.symbol} size={45} />\n            <Info>\n              <Top>\n                <div>{token.symbol}</div> <div />\n              </Top>\n              <Bottom>\n                <div>{token.name}</div> <div />\n              </Bottom>\n            </Info>\n          </InfoWrapper>\n          <ChevronWrapper onClick={handleChevronClick} className={classNames({ opened: isOpen })}>\n            <ChevronIcon name=\"chevron\" />\n          </ChevronWrapper>\n        </Content>\n        <Additional className={classNames({ opened: isOpen })}>\n          <Input\n            ref={inputRef}\n            title={`${token.symbol} Mint Address`}\n            value={token.address.toBase58()}\n            readOnly\n          />\n          <Button primary onClick={handleAddClick}>\n            <PlusIconWrapper>\n              <PlusIcon name=\"plus\" />\n            </PlusIconWrapper>\n            Add token\n          </Button>\n        </Additional>\n        <BottomInfo className={classNames({ opened: isOpen, error: isError })}>\n          {isError ? (\n            <Error>Something went wrong. We couldn’t add a token to your list.</Error>\n          ) : (\n            <>\n              <LeftInfo>View in Solana explorer</LeftInfo>\n              <RightInfo>will cost 0.002039 SOL</RightInfo>\n            </>\n          )}\n        </BottomInfo>\n      </Main>\n    </Wrapper>\n  );\n};\n","import React, { FunctionComponent, useState } from 'react';\n\nimport { styled } from '@linaria/react';\n\nimport { Token } from 'api/token/Token';\nimport { Icon, Input } from 'components/ui';\n\nimport { TokenRow } from '../TokenRow';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-gap: 2px;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n\n  margin-top: 15px;\n  padding: 0 30px;\n\n  & label {\n    height: 48px;\n\n    & input {\n      padding-left: 30px;\n    }\n  }\n`;\n\nconst SearchIcon = styled(Icon)`\n  position: absolute;\n  top: 12px;\n  left: 40px;\n\n  width: 28px;\n  height: 28px;\n\n  color: #a3a5ba;\n`;\n\ntype Props = {\n  items?: Token[];\n  closeModal: () => void;\n};\n\nexport const TokenList: FunctionComponent<Props> = ({ items, closeModal }) => {\n  if (!items) {\n    return null;\n  }\n\n  const [filterValue, setFilter] = useState('');\n\n  const handleFilterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = e.target.value.trim().toLowerCase();\n    setFilter(searchValue);\n  };\n\n  const filteredItems =\n    filterValue.length > 0\n      ? items.filter((item) => item.symbol?.toLowerCase().includes(filterValue))\n      : items;\n\n  return (\n    <Wrapper>\n      <InputWrapper>\n        <SearchIcon name=\"search\" />\n        <Input placeholder=\"Search token\" value={filterValue} onChange={handleFilterChange} />\n      </InputWrapper>\n      {filteredItems.map((token) => (\n        <TokenRow key={token.address.toBase58()} token={token} closeModal={closeModal} />\n      ))}\n    </Wrapper>\n  );\n};\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { styled } from '@linaria/react';\n\nimport { Token } from 'api/token/Token';\nimport { TokenAccount } from 'api/token/TokenAccount';\nimport { Modal } from 'components/common/Modal';\nimport { RootState } from 'store/rootReducer';\n\nimport { TokenList } from './TokenList';\n\nconst WrapperModal = styled(Modal)`\n  flex-basis: 588px;\n`;\n\nconst ScrollableContainer = styled.div`\n  max-height: 668px;\n  padding-bottom: 20px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar-track {\n    margin-bottom: 16px;\n  }\n`;\n\ntype Props = {\n  close: () => void;\n};\n\nexport const AddCoinModal: FunctionComponent<Props> = ({ close }) => {\n  const tokenAccounts = useSelector((state: RootState) =>\n    state.wallet.tokenAccounts.map((token) => TokenAccount.from(token)),\n  );\n  const availableTokens = useSelector((state: RootState) =>\n    state.global.availableTokens.map((token) => Token.from(token)),\n  );\n\n  const closeModal = () => {\n    close();\n  };\n\n  const filteredTokens = useMemo(() => {\n    if (!availableTokens) {\n      return;\n    }\n\n    const existsMintAccounts = new Set(tokenAccounts.map((token) => token.mint.address.toBase58()));\n\n    return availableTokens.filter((token) => !existsMintAccounts.has(token.address.toBase58()));\n  }, [availableTokens]);\n\n  return (\n    <WrapperModal title=\"Add coins\" close={close}>\n      {filteredTokens?.length ? (\n        <ScrollableContainer>\n          <TokenList items={filteredTokens} closeModal={closeModal} />\n        </ScrollableContainer>\n      ) : undefined}\n    </WrapperModal>\n  );\n};\n"],"sourceRoot":""}