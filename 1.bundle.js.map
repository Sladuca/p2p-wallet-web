{"version":3,"sources":["webpack:///./.linaria-cache/src/components/common/Modal/Modal.linaria.css","webpack:///./.linaria-cache/src/components/modals/AddCoinModal/TokenRow/TokenRow.linaria.css","webpack:///./.linaria-cache/src/components/modals/AddCoinModal/TokenList/TokenList.linaria.css","webpack:///./.linaria-cache/src/components/modals/AddCoinModal/AddCoinModal.linaria.css","webpack:///src/components/common/Modal/Modal.tsx","webpack:///src/components/modals/AddCoinModal/TokenRow/TokenRow.tsx","webpack:///src/components/modals/AddCoinModal/TokenList/TokenList.tsx","webpack:///src/components/modals/AddCoinModal/AddCoinModal.tsx"],"names":["Wrapper","Header","Title","Description","CloseWrapper","CloseIcon","Content","Modal","className","title","description","close","onClick","name","children","ChevronIcon","ChevronWrapper","Main","InfoWrapper","Info","Top","Bottom","Additional","TokenInfo","AddButton","TokenName","TokenAddress","PlusIconWrapper","PlusIcon","BottomInfo","ExplorerA","RightInfo","Error","LoaderBlockStyled","TokenRow","closeModal","dispatch","useDispatch","isOpen","setIsOpen","useState","isExecuting","setIsExecuting","isError","setError","isMintCopied","setIsMintCopied","cluster","useSelector","state","handleChevronClick","classNames","symbol","token","size","navigator","ToastManager","setTimeout","error","console","primary","disabled","async","createAccountForToken","href","getExplorerUrl","target","rel","isInfluencedFunds","fee","SearchInputStyled","EmptyBlock","EmptyBlockText","EmptyBlockDesc","TokenList","setFee","rawFee","setRawFee","filter","setFilter","publicKey","tokenAccounts","account","TokenAccount","solAccount","useMemo","useEffect","resultFee","unwrapResult","getMinimumBalanceForRentExemption","AccountLayout","mount","filteredItems","filterLower","items","item","Boolean","placeholder","value","onChange","nextFilter","key","width","height","WrapperModal","ScrollableContainer","AddCoinModal","availableTokens","Token","filteredTokens","existsMintAccounts","Set"],"mappings":"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","file":"1.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import React, { FunctionComponent } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { rgba } from 'polished';\n\nimport { Icon } from 'components/ui';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n\n  background-color: #fff;\n  border-radius: 15px;\n`;\n\nconst Header = styled.div`\n  position: relative;\n\n  padding: 20px 30px;\n\n  border-bottom: 1px solid ${rgba('#000', 0.05)};\n`;\n\nconst Title = styled.div`\n  color: #000;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 100%;\n`;\n\nconst Description = styled.div`\n  margin-top: 10px;\n\n  color: ${rgba('#000', 0.5)};\n  font-size: 14px;\n  line-height: 17px;\n`;\n\nconst CloseWrapper = styled.div`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n\n  background: #f6f6f8;\n  border-radius: 8px;\n\n  cursor: pointer;\n`;\n\nconst CloseIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n\n  color: #a3a5ba;\n`;\n\nconst Content = styled.div``;\n\ntype Props = {\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  close?: () => void;\n  className?: string;\n};\n\nexport const Modal: FunctionComponent<Props> = ({\n  title,\n  description,\n  close,\n  children,\n  className,\n}) => {\n  return (\n    <Wrapper className={className}>\n      <Header>\n        {title ? <Title>{title}</Title> : undefined}\n        {description ? <Description>{description}</Description> : undefined}\n        {close ? (\n          <CloseWrapper onClick={close}>\n            <CloseIcon name=\"close\" />\n          </CloseWrapper>\n        ) : undefined}\n      </Header>\n      {children ? <Content>{children}</Content> : undefined}\n    </Wrapper>\n  );\n};\n","import React, { FunctionComponent, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { styled } from '@linaria/react';\nimport classNames from 'classnames';\nimport { rgba } from 'polished';\n\nimport { Token } from 'api/token/Token';\nimport { LoaderBlock } from 'components/common/LoaderBlock';\nimport { ToastManager } from 'components/common/ToastManager';\nimport { TokenAvatar } from 'components/common/TokenAvatar';\nimport { Button, Icon } from 'components/ui';\nimport { createAccountForToken } from 'store/slices/wallet/WalletSlice';\nimport { getExplorerUrl } from 'utils/connection';\n\nconst Wrapper = styled.div`\n  display: flex;\n\n  padding-top: 10px;\n`;\n\nconst ChevronIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n\n  color: #a3a5ba;\n`;\n\nconst ChevronWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 24px;\n  height: 24px;\n\n  background: #f6f6f8;\n  border-radius: 8px;\n  transform: rotate(270deg);\n  cursor: pointer;\n\n  &.isOpen {\n    background: #a3a5ba;\n    transform: rotate(0deg);\n\n    ${ChevronIcon} {\n      color: #fff;\n    }\n  }\n`;\n\nconst Main = styled.div`\n  flex: 1;\n\n  padding: 0 20px;\n\n  &.isOpen {\n    background: ${rgba('#f6f6f8', 0.5)};\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n\n  padding: 10px 0;\n\n  &.isOpen {\n    padding-bottom: 20px;\n\n    border-bottom: 1px dashed ${rgba('#000', 0.05)};\n  }\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  margin-right: 48px;\n\n  cursor: pointer;\n`;\n\nconst Info = styled.div`\n  flex: 1;\n  margin-left: 20px;\n\n  font-size: 14px;\n  line-height: 17px;\n`;\n\nconst Top = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  color: #202020;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 27px;\n`;\n\nconst Bottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 4px;\n\n  color: ${rgba('#000', 0.5)};\n  font-size: 14px;\n  line-height: 16px;\n`;\n\nconst Additional = styled.div`\n  display: none;\n\n  margin-top: 15px;\n\n  &.isOpen {\n    display: flex;\n    align-items: center;\n\n    padding-bottom: 15px;\n\n    border-bottom: 1px dashed ${rgba('#000', 0.05)};\n  }\n`;\n\nconst TokenInfo = styled.div`\n  flex: 1;\n\n  margin-right: 10px;\n\n  cursor: pointer;\n`;\n\nconst AddButton = styled(Button)`\n  height: 44px;\n\n  &.isExecuting {\n    background: ${rgba('#5887ff', 0.5)};\n  }\n`;\n\nconst TokenName = styled.div`\n  color: #a3a5ba;\n  font-size: 14px;\n  line-height: 16px;\n\n  &.isMintCopied {\n    color: #2db533;\n  }\n`;\n\nconst TokenAddress = styled.div`\n  margin-top: 4px;\n\n  color: #000;\n  font-weight: 600;\n  font-size: 13px;\n  line-height: 16px;\n`;\n\nconst PlusIconWrapper = styled.div`\n  padding-right: 5px;\n`;\n\nconst PlusIcon = styled(Icon)`\n  width: 24px;\n`;\n\nconst BottomInfo = styled.div`\n  display: none;\n\n  justify-content: space-between;\n\n  font-weight: 600;\n  font-size: 14px;\n\n  &.isOpen {\n    display: flex;\n\n    padding: 15px 0;\n  }\n\n  &.isError {\n    justify-content: center;\n  }\n`;\n\nconst ExplorerA = styled.a`\n  color: #a3a5ba;\n`;\n\nconst RightInfo = styled.div`\n  color: #5887ff;\n\n  &.isError {\n    color: #f43f3d;\n  }\n`;\n\nconst Error = styled.div`\n  color: #f43f3d;\n`;\n\nconst LoaderBlockStyled = styled(LoaderBlock)`\n  margin-right: 8px;\n`;\n\ntype Props = {\n  token: Token;\n  isInfluencedFunds: boolean;\n  fee: number;\n  closeModal: () => void;\n};\n\nexport const TokenRow: FunctionComponent<Props> = ({\n  token,\n  fee,\n  isInfluencedFunds,\n  closeModal,\n}) => {\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [isError, setError] = useState(false);\n  const [isMintCopied, setIsMintCopied] = useState(false);\n  const cluster = useSelector((state) => state.wallet.cluster);\n\n  const handleChevronClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleAddClick = async () => {\n    try {\n      setIsExecuting(true);\n      await dispatch(createAccountForToken({ token }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    } finally {\n      setIsExecuting(false);\n    }\n    // dispatch(getTokenAccounts());\n    closeModal();\n  };\n\n  const handleCopyClick = () => {\n    try {\n      void navigator.clipboard.writeText(token.address.toBase58());\n      setIsMintCopied(true);\n      ToastManager.info(`${token.address.toBase58()} Address Copied!`);\n\n      // fade copied after some seconds\n      setTimeout(() => {\n        setIsMintCopied(false);\n      }, 2000);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Main className={classNames({ isOpen })}>\n        <Content className={classNames({ isOpen })}>\n          <InfoWrapper onClick={handleChevronClick}>\n            <TokenAvatar symbol={token.symbol} size={45} />\n            <Info>\n              <Top>\n                <div>{token.symbol}</div> <div />\n              </Top>\n              <Bottom>\n                <div>{token.name}</div> <div />\n              </Bottom>\n            </Info>\n          </InfoWrapper>\n          <ChevronWrapper onClick={handleChevronClick} className={classNames({ isOpen })}>\n            <ChevronIcon name=\"chevron\" />\n          </ChevronWrapper>\n        </Content>\n        <Additional className={classNames({ isOpen })}>\n          <TokenInfo onClick={handleCopyClick}>\n            <TokenName className={classNames({ isMintCopied })}>\n              {isMintCopied ? 'Mint Address Copied!' : `${token.symbol} Mint Address`}\n            </TokenName>\n            <TokenAddress>{token.address.toBase58()}</TokenAddress>\n          </TokenInfo>\n          <AddButton\n            primary\n            disabled={isExecuting}\n            onClick={handleAddClick}\n            className={classNames({ isExecuting })}>\n            {isExecuting ? (\n              <LoaderBlockStyled />\n            ) : (\n              <PlusIconWrapper>\n                <PlusIcon name=\"plus\" />\n              </PlusIconWrapper>\n            )}\n            {isExecuting ? 'Adding' : 'Add token'}\n          </AddButton>\n        </Additional>\n        <BottomInfo className={classNames({ isOpen, isError })}>\n          {isError ? (\n            <Error>Something went wrong. We couldn’t add a token to your list.</Error>\n          ) : (\n            <>\n              <ExplorerA\n                href={getExplorerUrl('address', token.address.toBase58(), cluster)}\n                target=\"_blank\"\n                rel=\"noopener noreferrer noindex\"\n                className=\"button\">\n                View in Solana explorer\n              </ExplorerA>\n              <RightInfo\n                className={classNames({\n                  isError: isInfluencedFunds,\n                })}>\n                {`will cost ${fee} SOL`}\n                {isInfluencedFunds ? ' (Influenced funds)' : ''}\n              </RightInfo>\n            </>\n          )}\n        </BottomInfo>\n      </Main>\n    </Wrapper>\n  );\n};\n","import React, { FunctionComponent, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { styled } from '@linaria/react';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { AccountLayout } from '@solana/spl-token';\nimport Decimal from 'decimal.js';\n\nimport { Token } from 'api/token/Token';\nimport { TokenAccount } from 'api/token/TokenAccount';\nimport { Icon } from 'components/ui';\nimport { SearchInput } from 'components/ui/SearchInput';\nimport { RootState } from 'store/rootReducer';\nimport { getMinimumBalanceForRentExemption } from 'store/slices/wallet/WalletSlice';\n\nimport { TokenRow } from '../TokenRow';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-gap: 2px;\n`;\n\nconst SearchInputStyled = styled(SearchInput)`\n  margin: 15px 20px 0;\n`;\n\nconst EmptyBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 8em 0;\n`;\n\nconst EmptyBlockText = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n`;\n\nconst EmptyBlockDesc = styled.div`\n  color: #a3a5ba;\n  font-weight: 600;\n  font-size: 14px;\n`;\n\ntype Props = {\n  items?: Token[];\n  closeModal: () => void;\n};\n\nexport const TokenList: FunctionComponent<Props> = ({ items, closeModal }) => {\n  const dispatch = useDispatch();\n  const [fee, setFee] = useState(0);\n  const [rawFee, setRawFee] = useState(0);\n  const [filter, setFilter] = useState('');\n  const publicKey = useSelector((state: RootState) => state.wallet.publicKey);\n  const tokenAccounts = useSelector((state: RootState) =>\n    state.wallet.tokenAccounts.map((account) => TokenAccount.from(account)),\n  );\n  const solAccount = useMemo(\n    () => tokenAccounts.find((account) => account.address.toBase58() === publicKey),\n    [tokenAccounts, publicKey],\n  );\n\n  useEffect(() => {\n    const mount = async () => {\n      try {\n        // TODO: not 0\n        const resultFee = unwrapResult(\n          await dispatch(getMinimumBalanceForRentExemption(AccountLayout.span)),\n        );\n        setRawFee(resultFee);\n        setFee(\n          new Decimal(resultFee)\n            .div(10 ** 9)\n            .toDecimalPlaces(9)\n            .toNumber(),\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    void mount();\n  }, []);\n\n  const filteredItems = useMemo(() => {\n    if (!items) {\n      return;\n    }\n\n    const filterLower = filter.toLowerCase();\n\n    return filterLower.length > 0\n      ? items.filter(\n          (item) =>\n            item.symbol?.toLowerCase().includes(filterLower) ||\n            item.name?.toLowerCase().includes(filterLower),\n        )\n      : items;\n  }, [filter, items]);\n\n  if (!items) {\n    return null;\n  }\n\n  const handleFilterChange = (value: string) => {\n    const nextFilter = value.trim();\n    setFilter(nextFilter);\n  };\n\n  const isInfluencedFunds = Boolean(solAccount?.balance.lt(rawFee));\n\n  return (\n    <Wrapper>\n      <SearchInputStyled placeholder=\"Search token\" value={filter} onChange={handleFilterChange} />\n      {filteredItems?.length ? (\n        filteredItems.map((token) => (\n          <TokenRow\n            key={token.address.toBase58()}\n            token={token}\n            fee={fee}\n            isInfluencedFunds={isInfluencedFunds}\n            closeModal={closeModal}\n          />\n        ))\n      ) : (\n        <EmptyBlock>\n          <Icon name=\"search\" width=\"100\" height=\"100\" />\n          <EmptyBlockText>Nothing found</EmptyBlockText>\n          <EmptyBlockDesc>Change your search phrase and try again</EmptyBlockDesc>\n        </EmptyBlock>\n      )}\n    </Wrapper>\n  );\n};\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { styled } from '@linaria/react';\n\nimport { Token } from 'api/token/Token';\nimport { TokenAccount } from 'api/token/TokenAccount';\nimport { Modal } from 'components/common/Modal';\nimport { RootState } from 'store/rootReducer';\n\nimport { TokenList } from './TokenList';\n\nconst WrapperModal = styled(Modal)`\n  flex-basis: 588px;\n`;\n\nconst ScrollableContainer = styled.div`\n  max-height: 668px;\n  padding-bottom: 20px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar-track {\n    margin-bottom: 16px;\n  }\n`;\n\ntype Props = {\n  close: () => void;\n};\n\nexport const AddCoinModal: FunctionComponent<Props> = ({ close }) => {\n  const tokenAccounts = useSelector((state: RootState) =>\n    state.wallet.tokenAccounts.map((token) => TokenAccount.from(token)),\n  );\n  const availableTokens = useSelector((state: RootState) =>\n    state.global.availableTokens.map((token) => Token.from(token)),\n  );\n\n  const closeModal = () => {\n    close();\n  };\n\n  const filteredTokens = useMemo(() => {\n    if (!availableTokens) {\n      return;\n    }\n\n    const existsMintAccounts = new Set(tokenAccounts.map((token) => token.mint.address.toBase58()));\n\n    return availableTokens.filter((token) => !existsMintAccounts.has(token.address.toBase58()));\n  }, [availableTokens]);\n\n  return (\n    <WrapperModal title=\"Add coins\" close={close}>\n      {filteredTokens?.length ? (\n        <ScrollableContainer>\n          <TokenList items={filteredTokens} closeModal={closeModal} />\n        </ScrollableContainer>\n      ) : undefined}\n    </WrapperModal>\n  );\n};\n"],"sourceRoot":""}