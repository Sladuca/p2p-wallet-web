{"version":3,"sources":["webpack:///./.linaria-cache/src/components/modals/CloseTokenAccountModal/CloseTokenAccountModal.linaria.css","webpack:///src/components/modals/CloseTokenAccountModal/CloseTokenAccountModal.tsx"],"names":["Wrapper","IconWrapper","CloseAccountIcon","Header","Description","Buttons","ButtonStyled","CloseTokenAccountModal","close","dispatch","useDispatch","isExecuting","setIsExecuting","useState","name","tokenName","disabled","onClick","async","closeTokenAccount","publicKey","wipeAction","getTokenAccounts","removeHiddenToken","error","console","setTimeout","history","light"],"mappings":"0FAAA,Q,oJCYA,MAAMA,EAAO,qDAePC,EAAW,0DAcXC,EAAgB,6DAOhBC,EAAM,oDAQNC,EAAW,yDAaXC,EAAO,sDAIPC,EAAY,yDAqBLC,EAAmD,EAAC,kCAI/DC,YAEA,MAAMC,EAAWC,eACVC,EAAaC,GAAkBC,oBAAtC,GA2BA,OACE,yBACE,yBACE,qBAAkBC,KAAlB,YAEF,yBAAU,SAAQC,cAClB,yBACI,uFAAsFA,yEAG1F,yBACE,qBAAcC,SAAd,EAAqCC,QA/BNC,UACnC,IACEN,YACMH,EAASU,YAAkB,CAAEC,eACnCX,EAASY,qBACHZ,EAASa,eACfC,YAAkBH,EAAlBG,YACA,MAAOC,GACPC,eAPF,QASEb,MAGFc,WAAW,KACTC,oBADFD,KAIAlB,MAcI,uBAGA,uBAAQoB,OAAR,EAAcZ,SAAd,EAAqCC,QAvCZ,KAC7BT,MAsCI,a","file":"2.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import React, { FunctionComponent, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { styled } from '@linaria/react';\nimport * as web3 from '@solana/web3.js';\nimport { History } from 'history';\n\nimport { Button, Icon } from 'components/ui';\nimport { wipeAction } from 'store/slices/GlobalSlice';\nimport { closeTokenAccount, getTokenAccounts } from 'store/slices/wallet/WalletSlice';\nimport { removeHiddenToken } from 'utils/settings';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-basis: 504px;\n  flex-direction: column;\n  padding: 32px 0 24px;\n\n  overflow: hidden;\n\n  background: #f6f6f8;\n\n  border-radius: 15px;\n`;\n\nconst IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n\n  margin: 0 20px;\n  padding: 8px;\n\n  background: #f77;\n  border-radius: 12px;\n`;\n\nconst CloseAccountIcon = styled(Icon)`\n  width: 20px;\n  height: 20px;\n\n  color: #fff;\n`;\n\nconst Header = styled.div`\n  margin-top: 20px;\n  padding: 0 20px;\n\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nconst Description = styled.div`\n  margin-top: 12px;\n  padding: 0 20px;\n  padding-bottom: 32px;\n\n  color: #a3a5ba;\n\n  font-weight: 600;\n  font-size: 16px;\n\n  border-bottom: 1px solid #fbfbfd;\n`;\n\nconst Buttons = styled.div`\n  padding: 24px 20px 0;\n`;\n\nconst ButtonStyled = styled(Button)`\n  margin-right: 16px;\n\n  color: #f77;\n\n  border: 1px solid #f77;\n\n  &:disabled {\n    background: #f77;\n    border: none;\n    opacity: 0.5;\n  }\n`;\n\ntype Props = {\n  publicKey: web3.PublicKey;\n  tokenName: string;\n  history: History;\n  close: () => void;\n};\n\nexport const CloseTokenAccountModal: FunctionComponent<Props> = ({\n  publicKey,\n  tokenName,\n  history,\n  close,\n}) => {\n  const dispatch = useDispatch();\n  const [isExecuting, setIsExecuting] = useState(false);\n\n  const handleCloseButtonClick = () => {\n    close();\n  };\n\n  // eslint-disable-next-line @typescript-eslint/require-await\n  const handleCloseTokenAButtonClick = async () => {\n    try {\n      setIsExecuting(true);\n      await dispatch(closeTokenAccount({ publicKey }));\n      dispatch(wipeAction());\n      await dispatch(getTokenAccounts());\n      removeHiddenToken(publicKey.toBase58());\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsExecuting(false);\n    }\n\n    setTimeout(() => {\n      history.push('/wallets');\n    }, 100);\n\n    close();\n  };\n\n  return (\n    <Wrapper>\n      <IconWrapper>\n        <CloseAccountIcon name=\"bucket\" />\n      </IconWrapper>\n      <Header>{`Close ${tokenName} account?`}</Header>\n      <Description>\n        {`Your balance will be converted and transferred to your main SOL wallet and all your ${tokenName}\n        addresses will be disabled. This action can not be undone.`}\n      </Description>\n      <Buttons>\n        <ButtonStyled disabled={isExecuting} onClick={handleCloseTokenAButtonClick}>\n          Close token account\n        </ButtonStyled>\n        <Button light disabled={isExecuting} onClick={handleCloseButtonClick}>\n          Cancel\n        </Button>\n      </Buttons>\n    </Wrapper>\n  );\n};\n"],"sourceRoot":""}