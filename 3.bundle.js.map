{"version":3,"sources":["webpack:///./.linaria-cache/src/components/modals/TransactionDetailsModal/TransactionDetailsModal.linaria.css","webpack:///src/components/modals/TransactionDetailsModal/TransactionDetailsModal.tsx"],"names":["Wrapper","Header","Title","CloseWrapper","CloseIcon","CircleWrapper","ArrowAngleIcon","Content","StatusWrapper","Value","Status","FieldsWrapper","FieldWrapper","FieldTitle","FieldValue","TransactionDetailsModal","close","dispatch","useDispatch","transaction","useSelector","state","Transaction","useEffect","mount","async","unwrapResult","getTransaction","setTimeout","title","slot","dayjs","onClick","name"],"mappings":"0FAAA,Q,oKCcA,MAAMA,EAAO,8DAWPC,EAAM,2DAQNC,EAAK,0DAOLC,EAAY,wEAEZC,EAAS,+DAWTC,EAAa,yEAgBbC,EAAc,0EAKdC,EAAO,8DAIPC,EAAa,0EAObC,EAAK,yDAOLC,EAAM,4DAaNC,EAAa,yEAEbC,EAAY,wEAUZC,EAAU,mEAOVC,EAAU,mEAaHC,EAAoD,EAAC,YAAaC,YAAY,MACzF,MAAMC,EAAWC,cACXC,EAAcC,YAClB,GACEC,wBAAsCC,SAAiBD,oBAF3D,KAmBA,OAdAE,oBAAU,KACR,MAAMC,EAAQC,UACAC,kBAAmBT,EAASU,YAAxC,MAGEC,WAAWJ,EAAXI,MAIJ,GACOJ,KAEN,CAZHD,IAcA,EAKE,yBACE,yBACE,qBAAOM,MAAUV,EAAYW,KAAd,SACZX,YACGY,SAAWZ,EAAXY,kBADHZ,OAEMA,EAAYW,KAAd,SAEP,qBAAcE,QAAd,GACE,qBAAWC,KAAX,WAEF,yBACE,qBAAgBA,KAAhB,kBAGJ,yBACE,yBACE,yBACGd,eAAD,WAAqC,IADvC,UAEGA,kCAFH,aAEGA,OAAD,QAEF,uCAEF,yBACE,yBACE,2CACA,yBAAY,IAEd,yBACE,mCACA,yBAAaA,eAAD,aAGd,yBACE,kCACA,yBAAaA,eAAD,aAGbA,OACC,yBACE,gCACA,yBAAaA,OAAD,IAAZ,cAHJ,QAzCN,M","file":"3.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import React, { FunctionComponent, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { styled } from '@linaria/react';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport * as web3 from '@solana/web3.js';\nimport dayjs from 'dayjs';\nimport { rgba } from 'polished';\n\nimport { Transaction } from 'api/transaction/Transaction';\nimport { Icon } from 'components/ui';\nimport { RootState } from 'store/rootReducer';\nimport { getTransaction } from 'store/slices/transaction/TransactionSlice';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-basis: 588px;\n  flex-direction: column;\n\n  background-color: #fff;\n  border-radius: 15px;\n`;\n\nconst Header = styled.div`\n  position: relative;\n\n  padding: 20px 20px 48px;\n\n  border-bottom: 1px solid ${rgba('#000', 0.05)};\n`;\n\nconst Title = styled.div`\n  color: #000;\n  font-size: 14px;\n  line-height: 17px;\n  text-align: center;\n`;\n\nconst CloseWrapper = styled.div``;\n\nconst CloseIcon = styled(Icon)`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n\n  width: 32px;\n  height: 32px;\n\n  cursor: pointer;\n`;\n\nconst CircleWrapper = styled.div`\n  position: absolute;\n  bottom: -28px;\n  left: 50%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 56px;\n  height: 56px;\n  margin-left: -28px;\n\n  background: #e1e1e1;\n  border-radius: 50%;\n`;\n\nconst ArrowAngleIcon = styled(Icon)`\n  width: 17px;\n  height: 17px;\n`;\n\nconst Content = styled.div`\n  padding: 0 30px 24px;\n`;\n\nconst StatusWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 52px 0 32px;\n`;\n\nconst Value = styled.div`\n  color: #000;\n  font-weight: 500;\n  font-size: 28px;\n  line-height: 33px;\n`;\n\nconst Status = styled.div`\n  margin-top: 12px;\n  padding: 5px 16px;\n\n  color: ${rgba('#000', 0.5)};\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 14px;\n\n  background: #f4f4f4;\n  border-radius: 8px;\n`;\n\nconst FieldsWrapper = styled.div``;\n\nconst FieldWrapper = styled.div`\n  padding: 20px 0;\n\n  border-bottom: 1px solid ${rgba('#000', 0.05)};\n\n  &:first-child {\n    border-top: 1px solid ${rgba('#000', 0.05)};\n  }\n`;\n\nconst FieldTitle = styled.div`\n  color: ${rgba('#000', 0.5)};\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 14px;\n`;\n\nconst FieldValue = styled.div`\n  margin-top: 8px;\n\n  color: #000;\n  font-size: 14px;\n  line-height: 17px;\n`;\n\ntype Props = {\n  signature: web3.TransactionSignature;\n  close: () => void;\n};\n\nexport const TransactionDetailsModal: FunctionComponent<Props> = ({ signature, close }) => {\n  const dispatch = useDispatch();\n  const transaction = useSelector(\n    (state: RootState) =>\n      state.transaction.items[signature] && Transaction.from(state.transaction.items[signature]),\n  );\n\n  useEffect(() => {\n    const mount = async () => {\n      const trx = unwrapResult(await dispatch(getTransaction(signature)));\n\n      if (!trx) {\n        setTimeout(mount, 3000);\n      }\n    };\n\n    if (!transaction) {\n      void mount();\n    }\n  }, [signature]);\n\n  if (!transaction) {\n    return null;\n  }\n\n  return (\n    <Wrapper>\n      <Header>\n        <Title title={`${transaction.slot} SLOT`}>\n          {transaction.timestamp\n            ? dayjs.unix(transaction.timestamp).format('LLL')\n            : `${transaction.slot} SLOT`}\n        </Title>\n        <CloseWrapper onClick={close}>\n          <CloseIcon name=\"close\" />\n        </CloseWrapper>\n        <CircleWrapper>\n          <ArrowAngleIcon name=\"arrow-angle\" />\n        </CircleWrapper>\n      </Header>\n      <Content>\n        <StatusWrapper>\n          <Value>\n            {transaction.short.amount.toNumber()}{' '}\n            {transaction.short.sourceTokenAccount?.mint.symbol}\n          </Value>\n          <Status>Completed</Status>\n        </StatusWrapper>\n        <FieldsWrapper>\n          <FieldWrapper>\n            <FieldTitle>Transaction ID</FieldTitle>\n            <FieldValue>{signature}</FieldValue>\n          </FieldWrapper>\n          <FieldWrapper>\n            <FieldTitle>Amount</FieldTitle>\n            <FieldValue>{transaction.short.amount.toNumber()}</FieldValue>\n            {/* <FieldValue>0,00344 BTC at 12 902, 07 US$</FieldValue> */}\n          </FieldWrapper>\n          <FieldWrapper>\n            <FieldTitle>Value</FieldTitle>\n            <FieldValue>{transaction.short.amount.toNumber()}</FieldValue>\n            {/* <FieldValue>0,00344 BTC at 12 902, 07 US$</FieldValue> */}\n          </FieldWrapper>\n          {transaction.meta ? (\n            <FieldWrapper>\n              <FieldTitle>Fee</FieldTitle>\n              <FieldValue>{transaction.meta.fee} lamports</FieldValue>\n              {/* <FieldValue>0,00009492 BTC</FieldValue> */}\n            </FieldWrapper>\n          ) : null}\n        </FieldsWrapper>\n      </Content>\n    </Wrapper>\n  );\n};\n"],"sourceRoot":""}