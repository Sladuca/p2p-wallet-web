{"version":3,"sources":["components/modals/AddCoinModal/TokenRow/TokenRow.tsx","components/modals/AddCoinModal/TokenRow/index.ts","components/modals/AddCoinModal/TokenList/TokenList.tsx","components/modals/AddCoinModal/TokenList/index.ts","components/modals/AddCoinModal/AddCoinModal.tsx","components/modals/AddCoinModal/index.ts"],"names":["Wrapper","name","class","ChevronWrapper","ChevronIcon","Icon","Main","Content","InfoWrapper","AvatarStyled","Avatar","Info","Top","Bottom","Additional","CopyWrapper","CopyIcon","TokenRow","mintAddress","tokenName","tokenSymbol","icon","dispatch","inputRef","isOpen","setIsOpen","handleChevronClick","opened","mint","web3","PublicKey","input","current","focus","setSelectionRange","value","length","document","execCommand","TokenList","items","map","item","WrapperModal","Modal","ScrollableContainer","AddCoinModal","close","ownerAccount","state","data","blockchain","account","entrypoint","tokenAccounts","entities","tokens","TOKENS_BY_ENTRYPOINT","isMainnetEntrypoint","clusterApiUrl","filteredTokens","existsMintAccounts","Set","Object","values","token","parsed","toBase58","filter","has","owner","Account","amount","decimals","initialAccount","undefined"],"mappings":"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","file":"AddCoinModal.3c94b899.js","sourceRoot":"../src","sourcesContent":["import React, { FunctionComponent, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as web3 from '@solana/web3.js';\nimport classNames from 'classnames';\nimport { styled } from 'linaria/react';\nimport { rgba } from 'polished';\nimport { Avatar, Button, Icon, Input } from 'components/ui';\nimport { TokenType } from 'constants/tokens';\nimport { createTokenAccount } from 'store/actions/complex/tokens';\nconst Wrapper = /*#__PURE__*/styled(\"div\")({\n  name: \"Wrapper\",\n  class: \"w2hsup5\"\n});\nconst ChevronWrapper = /*#__PURE__*/styled(\"div\")({\n  name: \"ChevronWrapper\",\n  class: \"cjk37vx\"\n});\nconst ChevronIcon = /*#__PURE__*/styled(Icon)({\n  name: \"ChevronIcon\",\n  class: \"c1aewuyh\"\n});\nconst Main = /*#__PURE__*/styled(\"div\")({\n  name: \"Main\",\n  class: \"m1x0i73s\"\n});\nconst Content = /*#__PURE__*/styled(\"div\")({\n  name: \"Content\",\n  class: \"c1lrr91s\"\n});\nconst InfoWrapper = /*#__PURE__*/styled(\"div\")({\n  name: \"InfoWrapper\",\n  class: \"ifuaxgh\"\n});\nconst AvatarStyled = /*#__PURE__*/styled(Avatar)({\n  name: \"AvatarStyled\",\n  class: \"asx2g64\"\n});\nconst Info = /*#__PURE__*/styled(\"div\")({\n  name: \"Info\",\n  class: \"i10180ct\"\n});\nconst Top = /*#__PURE__*/styled(\"div\")({\n  name: \"Top\",\n  class: \"t1idmxl7\"\n});\nconst Bottom = /*#__PURE__*/styled(\"div\")({\n  name: \"Bottom\",\n  class: \"b5vkidx\"\n});\nconst Additional = /*#__PURE__*/styled(\"div\")({\n  name: \"Additional\",\n  class: \"ajtzobz\"\n});\nconst CopyWrapper = /*#__PURE__*/styled(\"div\")({\n  name: \"CopyWrapper\",\n  class: \"cr7kpio\"\n});\nconst CopyIcon = /*#__PURE__*/styled(Icon)({\n  name: \"CopyIcon\",\n  class: \"c1n4pegg\"\n});\nexport const TokenRow: FunctionComponent<TokenType> = ({\n  mintAddress,\n  tokenName,\n  tokenSymbol,\n  icon\n}) => {\n  const dispatch = useDispatch(); // eslint-disable-next-line unicorn/no-null\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleChevronClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleAddClick = () => {\n    const mint = new web3.PublicKey(mintAddress);\n    dispatch(createTokenAccount(mint));\n  };\n\n  const handleCopyClick = () => {\n    const input = inputRef.current;\n\n    if (input) {\n      input.focus();\n      input.setSelectionRange(0, input.value.length);\n      document.execCommand('copy');\n    }\n  };\n\n  return <Wrapper>\n      <ChevronWrapper onClick={handleChevronClick} className={classNames({\n      opened: isOpen\n    })}>\n        <ChevronIcon name=\"chevron\" />\n      </ChevronWrapper>\n      <Main>\n        <Content>\n          <InfoWrapper onClick={handleChevronClick}>\n            <AvatarStyled src={icon} />\n            <Info>\n              <Top>\n                <div>{tokenSymbol}</div> <div />\n              </Top>\n              <Bottom>\n                <div>{tokenName}</div> <div />\n              </Bottom>\n            </Info>\n          </InfoWrapper>\n          <Button secondary small onClick={handleAddClick}>\n            Add\n          </Button>\n        </Content>\n        <Additional className={classNames({\n        opened: isOpen\n      })}>\n          <Input ref={inputRef} title={`${tokenSymbol} Mint Address`} value={mintAddress} readOnly postfix={<CopyWrapper onClick={handleCopyClick}>\n                <CopyIcon name=\"copy\" />\n              </CopyWrapper>} />\n        </Additional>\n      </Main>\n    </Wrapper>;\n};","export { TokenRow } from './TokenRow';\n","import React, { FunctionComponent } from 'react';\nimport { styled } from 'linaria/react';\nimport { TokenType } from 'constants/tokens';\nimport { TokenRow } from '../TokenRow';\nconst Wrapper = /*#__PURE__*/styled(\"div\")({\n  name: \"Wrapper\",\n  class: \"w1wf7dhi\"\n});\ntype Props = {\n  items?: TokenType[]; // TODO: not any\n\n};\nexport const TokenList: FunctionComponent<Props> = ({\n  items\n}) => {\n  if (!items) {\n    return null;\n  }\n\n  return <Wrapper>\n      {items.map(item => <TokenRow key={item.mintAddress} {...item} />)}\n    </Wrapper>;\n};","export { TokenList } from './TokenList';\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as web3 from '@solana/web3.js';\nimport { styled } from 'linaria/react';\nimport { Modal } from 'components/common/Modal';\nimport { Button } from 'components/ui';\nimport { TOKENS_BY_ENTRYPOINT } from 'constants/tokens';\nimport { createAndInitializeMint } from 'store/actions/complex/tokens';\nimport { RootState } from 'store/types';\nimport { TokenList } from './TokenList';\nconst WrapperModal = /*#__PURE__*/styled(Modal)({\n  name: \"WrapperModal\",\n  class: \"wiqml5\"\n});\nconst ScrollableContainer = /*#__PURE__*/styled(\"div\")({\n  name: \"ScrollableContainer\",\n  class: \"s17ynaak\"\n}); // const ITEMS = [\n//   {\n//     symbol: 'SRM',\n//     name: 'Serum',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'MSRM',\n//     name: 'MegaSerum',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'BTC',\n//     name: 'Wrapped Bitcoin',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'ETH',\n//     name: 'Wrapped Ethereum',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'FTT',\n//     name: 'Wrapped FTT',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'YFI',\n//     name: 'Wrapped YFI',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'YFI',\n//     name: 'Wrapped YFI',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n// ];\n\ntype Props = {\n  close: () => void;\n};\nexport const AddCoinModal: FunctionComponent<Props> = ({\n  close\n}) => {\n  const dispatch = useDispatch();\n  const ownerAccount = useSelector((state: RootState) => state.data.blockchain.account);\n  const entrypoint = useSelector((state: RootState) => state.data.blockchain.entrypoint);\n  const tokenAccounts = useSelector((state: RootState) => state.entities.tokens.items);\n  const tokens = TOKENS_BY_ENTRYPOINT[entrypoint];\n  const isMainnetEntrypoint = entrypoint === web3.clusterApiUrl('mainnet-beta');\n\n  const handleMintTestTokenClick = () => {\n    if (!ownerAccount) {\n      return;\n    }\n\n    dispatch(createAndInitializeMint({\n      owner: ownerAccount,\n      mint: new web3.Account(),\n      amount: 1000,\n      decimals: 2,\n      initialAccount: new web3.Account()\n    }));\n  };\n\n  const filteredTokens = useMemo(() => {\n    if (!tokens) {\n      return;\n    }\n\n    const existsMintAccounts = new Set(Object.values(tokenAccounts).map(token => token.parsed.mint?.toBase58()));\n    return tokens.filter(token => !existsMintAccounts.has(token.mintAddress));\n  }, [tokenAccounts, tokens]);\n  return <WrapperModal title=\"Add coins\" description={<>\n          Add a token to your wallet. This will cost 0.002039 SOL.\n          {!isMainnetEntrypoint ? <>\n              {' '}\n              <Button link onClick={handleMintTestTokenClick}>\n                Mint test token\n              </Button>\n            </> : null}\n        </>} close={close}>\n      {filteredTokens?.length ? <ScrollableContainer>\n          <TokenList items={filteredTokens} />\n        </ScrollableContainer> : undefined}\n    </WrapperModal>;\n};","// eslint-disable-next-line import/no-default-export\nexport { AddCoinModal as default } from './AddCoinModal';\n"]}