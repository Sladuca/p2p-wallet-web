{"version":3,"sources":["store/utils/instructions/tokenProgram.ts","store/actions/complex/tokens.ts","components/modals/AddCoinModal/TokenRow/TokenRow.tsx","components/modals/AddCoinModal/TokenRow/index.ts","components/modals/AddCoinModal/TokenList/TokenList.tsx","components/modals/AddCoinModal/TokenList/index.ts","components/modals/AddCoinModal/AddCoinModal.tsx","components/modals/AddCoinModal/index.ts"],"names":["LAYOUT","BufferLayout","union","u8","addVariant","struct","blob","nu64","instructionMaxSpan","Math","max","Object","values","registry","map","r","span","encodeTokenInstructionData","instruction","b","Buffer","alloc","encode","slice","initializeMintInstruction","mint","decimals","mintAuthority","freezeAuthority","keys","pubkey","isSigner","isWritable","web3","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","initializeMint","toBuffer","freezeAuthorityOption","PublicKey","programId","TOKEN_PROGRAM_ID","initializeAccountInstruction","account","owner","initializeAccount","mintToInstruction","destination","amount","mintTo","createAndInitializeMint","initialAccount","dispatch","connection","ApiSolanaService","getConnection","transaction","Transaction","getMinimumBalanceForRentExemption","MINT_LAYOUT","lamportsForMint","add","SystemProgram","createAccount","fromPubkey","publicKey","newAccountPubkey","lamports","space","signers","push","ACCOUNT_LAYOUT","lamportsForAccount","SOLANA_API","action","mintTestTokenAsyncAction","options","preflightCommitment","createAndInitializeTokenAccount","payer","mintPublicKey","newAccount","createTokenAccount","tokenAddress","getState","ownerAccount","blockchain","console","info","Account","Wrapper","name","class","ChevronWrapper","ChevronIcon","Icon","Main","Content","InfoWrapper","AvatarStyled","Avatar","Info","Top","Bottom","Additional","CopyWrapper","CopyIcon","TokenRow","mintAddress","tokenName","tokenSymbol","icon","inputRef","isOpen","setIsOpen","handleChevronClick","handleAddClick","handleCopyClick","input","current","focus","setSelectionRange","value","length","document","execCommand","opened","TokenList","items","item","WrapperModal","Modal","ScrollableContainer","AddCoinModal","close","state","entrypoint","tokenAccounts","entities","tokens","TOKENS_BY_ENTRYPOINT","isMainnetEntrypoint","clusterApiUrl","handleMintTestTokenClick","filteredTokens","existsMintAccounts","Set","token","parsed","toBase58","filter","has","log","undefined"],"mappings":";;;;;;;AMAA;;AACA,AFDA,AFAA;;AIEA,AFDA,AFAA;AGDA,AFAA,AICA,APDA;AMGA,AFAA,AFDA,ADFA;ADCA;AMGA,AJDA,ADDA;ADCA;AMEA,AFDA,AFAA,ADDA,IGCM2F,OAAO,GAAG,aAAa,oBAAO,KAAP,EAAc;AACzCC,EAAAA,IAAI,EAAE,SADmC;AEE3C,AFAEC,AFAF,ADFA,EGEEA,KAAK,EAAE;AAFkC,CAAd,CAA7B;AEGA,AJCA,ADHA;AGOO,IAAMmC,SAAmC,GAAG,SAAtCA,SAAsC,OAE7C;AELN,AFKM,AHPN,MGMEC,KACI,QADJA,KACI;AJTN,IAAMjI,MAAM,GAAGC,YAAY,CAACC,KAAb,CAAmBD,YAAY,CAACE,EAAb,CAAgB,aAAhB,CAAnB,CAAf;AIUE,AJTFH,MISM,AJTA,CISCiI,AJTA7H,KISL,EAAY,GJTd,CACE,CADF,EAEEH,YAAY,CAACI,MAAb,CAAoB,CAClBJ,YAAY,CAACE,EAAb,CAAgB,UAAhB,CADkB,EAElBF,YAAY,CAACK,IAAb,CAAkB,EAAlB,EAAsB,eAAtB,CAFkB,EAGlBL,YAAY,CAACE,EAAb,CAAgB,uBAAhB,CAHkB,EAIlBF,YAAY,CAACK,IAAb,CAAkB,EAAlB,EAAsB,iBAAtB,CAJkB,CAApB,CAFF,EAQE,gBARF;AIUI,AJAJN,MAAM,CAACI,IIAI,IAAP,EJAJ,CAAkB,CAAlB,EAAqBH,YAAY,CAACI,MAAb,CAAoB,EAApB,CAArB,EAA8C,mBAA9C;AICG,AJAHL,MAAM,CAACI,UAAP,CAAkB,CAAlB,EAAqBH,YAAY,CAACI,MAAb,CAAoB,CAACJ,YAAY,CAACM,IAAb,CAAkB,QAAlB,CAAD,CAApB,CAArB,EAAyE,UAAzE;AACAP,MAAM,CAACI,UAAP,CAAkB,CAAlB,EAAqBH,YAAY,CAACI,MAAb,CAAoB,CAACJ,YAAY,CAACM,IAAb,CAAkB,QAAlB,CAAD,CAApB,CAArB,EAAyE,QAAzE;AMRA,AFSE,AFVF,AFUAP,IMTMmI,AJDAxC,EFUA,CAACvF,IEVM,GAAG,EICE,CNSlB,CAAkB,CMTG,ANSrB,EAAqBH,CIAZ,KFVoB,KICK,CNSD,CAACI,MAAb,CAAoB,CAACJ,KEVN,IEU1B,CET+BmI,AJDZ,EAAc,AFUW,CAAC7H,GIA9C,CJAiC,CAAkB,IMT1B,EAAc,AFUzC0H,EJDmC,CAAD,CAApB,CICT,AJDZ,CICanH,CJD4D,EIClE,CAAU,GJDjB,OICiBoH,IAAI;AETnBtC,AFSmB,AFVnBA,AFUF5F,EMTE4F,AJDAA,IICI,AJDA,AFUA,CAACxF,CMTC,AJDA,SADmC,AFW3C,CAAkB,CAAlB,EAAqBH,CMV2B,EFUvB,SJAQ,CAACI,MAAb,CAAoB,EAApB,CAArB,EAA8C,OIApB,OJA1B,WIAyB;AERvBwF,AFQiC,AFTjCA,ADEK,ADSP,EMVEA,AJDAA,EDEW1C,ADSP3C,EIF6B,CER5B,AJDA,EICE,AFQ6B,AFT7B,EES+B0H,IAAI,CAACrB,MJErB,GAAGpG,ECTS,EDSL,CCTQ,ADSPC,GAAL,MCTdyC,CDSc1C,IAAI,kBCTQ,iBDSAE,MAAM,CAACC,MAAP,CAAcZ,MAAM,CAACa,QAArB,EAA+BC,GAA/B,CAAmC,UAACC,CAAD;AMZ1B,AFUvB,AFXkB,ADIJ,ADSmC,CMZxC,AJDL,CIC7B,AJDA,IDKE8B,CGM4DqF,EJEmBnH,CAAC,CIFzD,AHPc,ADS4CC,EIF9D,EJEqD,ICRxE6B,KADqC;AKCvC,AFMqB,AFPrB,ADAuC,ADSmC,CAAnC,CAAR,CIFxB,CENDwF,AFKG,AFNHvC,AFSN,CIHE,CHJArE,IAFqC,QCAnB,ADElBA,GCFqB,CDAgB,CKCd,GAAG,QJDQ,KICK,eJDE,KICK,AJDZ,EAAc,GICT,EAAc;AACrDmE,AFOD,AFRCA,ADDqC,CGDhC,CEGLA,AJDAA,IICI,AJDA,ADEJ3C,EKDM,AJDA,IDD+B,QAGrCA,ICHgD,EDAX,GKCgB;AAErD4C,AJDAA,ADFqC,ADWvC,EMREA,AJDAA,IDEAnE,CKDK,AJDA,EICE,AJDA,AFSAT,KCX8B,QAIrCS,QAJqC,KDWvC,CAAoCR,WAApC,EAAiD;AMVM,AJDL,ADAX,ADYrC,CMXuC,AJDL,CICpC,AJDA,EIII,ELCFkC,ADOMjC,CAAC,GAAGC,MAAM,CAACC,GCZoB,EDY3B,CAAab,KCPvB4C,aDOU,CCZ2B,ADYrC;AMPF,AJDA,ADJuC,ADarC,IETI2C,EFSE/E,IAAI,GAAGhB,EETE,GAAG,CFSC,CAACsB,MAAP,CAAcJ,IETI,OFSlB,EAA2BC,CAA3B,CAAb,SETsC6E,QAAP,EAAa;AIE9C,AJDEJ,ADLqC,ADcrC,EETAA,IAAI,EAAE,CFSCzE,CAAC,CAACI,KAAF,CAAQ,CAAR,EAAWP,CEV0B,GFUrC,CAAP,+DCFc,iBAAOqC,QAAP;AKLhB,AJDEwC,ADMc,ADGf,EETCA,KAAK,EAAE;AIET,AJJ8C,ADQ9B,CCRiB,CAAjC;AIKA,AJDA,ADIgB,ADKT,IETDI,IAAI,CFSMzE,EETH,aAAa,UFSnB,OAUJ,GEnB8B,KAAP,EAAc;AIExC,AJDEoE,ADGc,ADeb,EElBDA,IAAI,AFSJnE,EETM,EFkBL,IEnBqC,IFUtCA,IASC;AMhBH,AJDEoE,ADEc,ADeb,EEjBDA,IFSAnE,CETK,EAAE,KFiBN,QARDA,QAQC;AMfH,AJJwC,ADKhC4B,ADcL,CEnBuB,CAA1B,IFYE3B,QCPM2B,KDcL,KCfa,GACKC,ADOnB5B,aAOC,cCdmC6B,aAAjB,EADL;AKChB,AJDA,ADGQC,ADYL,IEfGyC,EFSJtE,KETW,GAAG,ADGR6B,ODYL,ICfa,ECAa,CDGP,CDMpB7B,GCNwBK,IAAI,CAACyB,ODY5B,GEfiC,CDGd,EAHN,ECAa,EAAc;AIE3C,AJDEkC,ADDc,ADgBd,EEfAA,IAAI,AFeE/D,EEfA,EFeI,GAAG,CACX,GEjBuC;AIG3C,AJDEgE,ADFc,ADiBV/D,EEfJ+D,EFeI/D,GEfC,EAAE,CFeG,EAAEL,IAAV,KCZ4B6B,UAAU,CAACK,iCAAX,CAA6CC,2BAAY5C,IAAzD,CALhB;AKIhB,AJJ2C,AFiBvBe,CEjBS,CAA7B,EFiBoBA,QAAQ,EAAE,KAA1B;AMZJ,AJDA,ADJgB,ADiBqBC,IEb/BmE,AFa+BnE,UAAU,CEb9B,CFagC,EEb7B,aAAa,oBAAO,KAAP,EAAc;AIE/C,AJDE4D,ADAM/B,ADYJ,EEZF+B,CFWa,EAEX,CEbE,EAAE,MDAA/B,OCDuC,QDJ/B;AKOhB,AJDEgC,ADCApC,ADWI3B,EEZJ+D,EFYI/D,GEZC,EAAE,CFYG,EAAEG,ECXZwB,EDWgB,CAACvB,QCXN,CAAC4B,GAAZ,CACE7B,IAAI,CAAC8B,ADUL,aCVA,CAAmBC,aAAnB,CAAiC;AKArC,AJJ+C,ADKzCC,ADSiClC,CEdN,CAAjC,EFcuCA,QAAQ,EAAE,ECT3CkC,GDSF,OCTY,EAAEpB,KAAK,CAACqB,SADa;AKCrC,AJDA,ADEMC,ADQkDnC,IEVlDoE,AFUkDpE,UAAU,EEVhD,ADEZmC,ADQ8D,GEV/C,aAAa,ADEZ,EAAE1C,IAAI,CAACyC,SAFQ,ICAImC,UAAP,EAAe;AIEjD,AJDET,ADEIxB,ADOF,EETFwB,CFOa,CAAb,EEPI,EAAE,QDEFxB,MCH2C,EDGnC,EAAEP,eAHqB;AKGrC,AJDEgC,ADEIxB,ADSJ,EEXAwB,KAAK,EAAE,AFWA,IAAI5D,GCTPoC,CDSW,CAAClC,GCTP,EAAEyB,iBDSJ,CAAgC,SCThB5C,IAJY;AKIrC,AJJiD,ADK3CyB,ADSFZ,CEd8B,CAAlC,EFcIA,IAAI,EAAJA,IADqC,ECRnCY,SAAS,EAAEC;AKAjB,AJDA,ADJqC,ADejCN,IEXEkE,AFWFlE,IEXM,AFWF,EAAEnB,CEXG,IDJT,CADF,QCKwB,YFWU,CAAC,OEXJ,KAAP,EAAc;AIExC,AJDE2E,ADIAnC,ADOIpB,EEXJuD,IAAI,AFWAvD,EEXE,MADgC,ADKtCoB,MDOkB,EAAE,GCPT,CAACK,GAAZ,CACE,6CAA0B;AKH9B,AJDE+B,ADKIpE,ADMEC,EEXNmE,KAAK,CFWCnE,CEXC,ODKHD,ADMU,EAARC,ECNE,EAAED,IAAI,ADKM,CCLLyC,SADa;AKF9B,AJJwC,ADQlCxC,ADMEC,CEdkB,CAA1B,MFcQA,QCNFD,KDMe,EAAEC,CCNT,EAARD,QAFwB,EDQM,CAACY,QAAd,EAFD;AMPtB,AJDA,ADKMX,ADMEY,IEXFgE,GAAG,CFWDhE,EEXI,MDKNZ,OCLmB,MDKN,ADMU,ECNRkB,ADMU,CAAC,CAACjB,GCNP,CAACsC,MCLK,KAAP,AFQH,EERiB;AIEvC,AJDE0B,ADC4B,ADUtBhE,EEXNgE,IAAI,EAAE,AFWAhE,KEZ+B,EDEnC,CADF,ODWqB,EAAE,CAACA,eAAe,IAAI,IAAIK,IAAI,CAACO,SAAT,EAApB,EAA0CF,QAA1C;AMTzB,AJDEuD,ADOMvB,ADDc,EENpBuB,KAAK,EAAE,KDODvB,OAzBQ,GAyBE,CAACzB,KAAD,EAAQpB,IAAR,CAzBF;AKoBhB,AJJuC,AFOF,CEPZ,CAAzB,GFOoC,CAFK;AMAzC,AJDA,ADpBgB,AD+BZgB,IEXE+D,AFWF/D,MEXQ,GAAG,AFWF,EAAEC,KCJTO,MCPsB,ADOhB,GAAG,CA3BC,gBCoBmB,KAAP,EAAc;AIE1C,AJDE2C,ADrBc,ADqByB,EEAvCA,CFAO,CAAP,EEAI,EAAE,QADkC;AIG1C,AJDEC,ADtBc,ADiCf,EEXCA,KAAK,EAAE;AIET,AJJ0C,ADpB1B,CCoBY,CAA5B;AIKA,AJDA,AFWO,IEXDY,KFWU9D,KEXA,GAAG,aAAa,OFWzB,QAQJ,KEnBoC,KAAP,EAAc;AIE9C,AJDEiD,ADGEtB,ADeD,EElBDsB,IAAI,AFWJhD,EEXM,KFkBL,CCfC0B,MCJ0C,CDInC,CAACC,ADQV3B,ICRE,CAAaQ,EDed,YCfC;AKDJ,AJDEyC,AD1Bc,AD2Cb,EEjBDA,IFWApE,CEXK,EAAE,CFiBN,SANDA,IAMC;AMfH,AJJ8C,ADxB9B,AD2Cb,CEnB6B,CAAhC,IFcEoB,KAKC,SALDA,CCRmCS,IDalC,MCb4C,CAACK,iCAAX,CAC/Ba,8BAAexD,IADgB,CA9BrB;AK6BhB,AJDA,AFgBE,IEhBI0F,EFgBE7E,IAAI,GAAG,CACX,CEjBa,GAAG,aAAa,oBAAO,KAAP,EAAc;AIE/C,AJDE+D,AD7Bc,AD6CV9D,EEhBJ8D,EFgBI9D,EEhBA,EAAE,EFgBI,EAAEc,OAAV,EEjB2C;AIG/C,AJDEiD,ADAQpB,ADea1C,EEfrB8D,EFeqB9D,GEfhB,EAAE,GFesB,ECfrB0C,ADeuB,KAA7B,aC7CY;AKgChB,AJJ+C,ADM3ChB,ADWoCzB,CEjBP,CAAjC,EFiBwCA,UCXpCyB,ADW8C,EAAE,SCXrC,CAACK,GAAZ,CACE7B,IAAI,CAAC8B,aAAL,CAAmBC,aAAnB,CAAiC;AKFvC,AJDA,ADIQC,ADSJ,GADW,CEZT0C,CFcF,OEdU,GAAG,CDIT1C,UAAU,ECJY,ADIVpB,KAAK,CAACqB,SADa,KCHF8B,QAAP,EAAa;AIE3C,AJDEJ,ADIMzB,ADSFrC,EEbJ8D,EFaI9D,EEbA,EAAE,EFaI,EAAEL,ICTN0C,ADSJ,EEduC,cDKnB,EAAEf,cAAc,CAACc,SAFF;AKAvC,AJDE2B,ADIMzB,ADQYrC,EEZlB8D,EFYkB9D,GEZb,EAAE,GFYmB,EAAE,ECRtBqC,GDQJ,KCRY,EAAEK,kBAHqB;ACHI,ADOnCJ,ADO6BrC,CEdP,CAA9B,EFcqCA,UAAU,ECPvCqC,ADOyC,KCPpC,EAAEG,8BAAexD,IAJS;AKKhC,ALACyB,ADMJ,GAFW,CMJF6F,CNOT,WMP+C,ALA3C7F,GKA8C,MLArC,EAAEC,CKAN4F,YAAyC,OAEhD;AAAA,AJNC,ADDgC,ADYjCxG,IEXO8E,AFWP9E,EMNJyG,INMU,CMLN,CJN6C,AFWrC1F,GEXwC,ADDhD,CADF,CDaA,EMNF0F,KACI,AJNO3B,QAAyC,OAKhD;AIEJ,AJFI,ADGFnD,ADGiB1B,IAAAA,EMJbsB,AJNNwD,MFU2B,EMJb,ALCZpD,ADG2B,GMJZ,AJFb,EFMF,MEVFoD,ADOa,CAAC/C,GAAZ,CACE,MCJA,WIEJ,+BLEiC;AKDjC,AJHI,ADKElB,ADC8BZ,IAAAA,EMH9BsD,AJNNwB,QFS8C,CEN1C,CDKElE,ADC0C,EMH9B,GAAG,EJNrBkE,ADQa,EAAE1D,OCLX,ODKyB,CAACc,SADG,CKDA,UAACsE,KAAD;AAAA,AJH7B,ADME/G,ADAJ,GAHW,EAIX,CETFsF,KIKuDyB,KAAK,ALGtD/G,CKHuDW,AJHzD,GDMM,CKH6C,CAAWmD,ALGtD9D,GCRZsF,CDQgB,CAAC7C,KKHsC,CAAsBtB,GJHzE,ADI6B,IKDA;AAAA,AJH7B,ADOEC,ADAFf,GMJiB,CAArB,ANIIA,EERJkF,IACI,AFOM,EAAE/E,ICANY,ADAU,CAACX,CERjB8E,GDQW,CCPP,CDOSnE,KAAK,CAACqB,MDAjB;AMHF,AJHA,ADGiC,ADGInC,IAAAA,EMH/B0G,AJHApF,MFMuC,EEN/B,AFMiC,CCH3C,CKAY,ALDd,CCFe,EIGE,ANGjB,4BENF,CIG+B,AJJ3B,CAC4B,SIGAmF,KAAD;AAAA,ALO7B/E,ADJoDzB,IAAAA,OMHDwG,GLOnD/E,ADJ8D,EMHN,ANGQ,CMHPrB,IAAN,CAAWmD,GLOnD,CAACzB,GAAZ,CACE,EKRiD,CAAsB2E,UAA5C,wBLQT;AKRS,AJD/B,ADUMhH,ADNJ,GMHiB,ANDN,CMCb,ANDA,EEAMwF,QAAQ,EDURxF,CCVW,GDUP,EAAEA,IAAI,CAACyC,SCVyB,ADSpB,ICTL,CAAjB;AIEA,ALSMlB,ADJN,MMLM0F,GNKC,IAAIzG,GCILe,CDJS,CAACb,CMLG,GAAG,KLSL,EAAEiB,WDJZ,CAAgC,ECIN,CAACc,OKTA,ELOZ,QKPasE,KAAD;AAAA,AJL9B,ADeEvF,ADJJpB,IAAAA,IAAI,EAAJA,CMNsD2G,GNKjB,EMLsB,ALUvDvF,CKVwD0F,CJDlC,IDWhB,EAAN1F,CKVkD,CAAe2F,ILOjD,EKPkC,CAAsBX,KAA5C,CJDG,KAAT,CAJxB;AIK8B,AJL9B,ADgBEtG,ADJJS,GMPoB,CAAtB,ANOEA,IAAI,EAAEnB,MCIFU,aAAa,EAAEkB,KAAK,ADJQ,CCIPqB,ADJQ;AMNnC,AJNI,ADYkB,ADClBpB,MMPE8F,AJFC1B,AFSHpE,MMPQ,AJNR,GIMW+F,ALMX,CADF,ODEmB,EAAE,mBMPaJ,UAArB,CAAf;AACA,AJPI,AFY+B,KAAD,CML5BK,AJHS3B,AFMwB,SEVnC,UIOqB,GAAGsB,UAAU,KAAKxG,IAAI,CAAC8G,aAAL,CAAmB,cAAnB,CAA3C;ALhDc,ADwDZtG,IAAAA,SAAS,EAAEC;AMNb,AJHA,AD/Cc,ADmDyB,GAAhC,CAAP,EMDMsG,AJHA5B,kBAAkB,GAAG,GIGG,GAAG,GJH3BA,MIGA4B,KLYC3F,OCfoB,CDeZ,ECfkB,SIGA,GAAM,qBLapCqB,uBADY,EACC;AKZd,AJHAyC,ADgBExC,ADNL,IEVGwC,IIGI,CAAC7B,IJHI,CAAC,CAAC4B,CDgBTvC,KKbF,AJHS,CAAT,ADgBQ,CKbW,CLaTC,kCADI;AKXZ,AJHH,ADgBGnB,GClBJ,aDkBIA,WAAW,EAAXA,WAFY;AKVb,ALaCa,ADNC,SAASvB,OCMVuB,OAAO,EAAPA,CDNC,MCGW,EDOf;AEnBD,ADgBIO,ADGH,MEnBKwC,AFUN5F,IASC,MCHGoD,GDNJpD,CEVoB,GAAG,ADgBZ,ADGV,ECHY,OChBP4F,cAAiB,GAAM;AII3BhE,AJHA,ADgBIyB,ADEL,IMfCzB,ENOFL,EEVQvB,IIGE,AJHE,CIGD,EJHI,EFkBd,CCFKqD,CChBa7C,IAAI,CAACO,EFUxBQ,OEVe,CAAmB6D,GDgBT,ADExB,ECF0B,MChBZ,CAAb,KIGiC;AAC/BhE,AJHFQ,ADcW,ADGZ,IEjBCA,EIGER,ANOJI,KMPS,CJHC,AFiBT,CMdUqC,AJHA,QFUXrC,IMRmC,ENelC,kBEjB6BxB,IAAnB,CAAD,CAAR;AIIEA,AJHH,ADSe,ADOf,GEnBD,GIMIA,ANOJE,IMPQ,EAAE,GLKK,CKLDM,CLzDA,EDsEb,CMbiB,CAACyD,OAAT,ANOV/D,EMTmC,WNelC;AMZGsB,ANaJ,MMbIA,ANaEpB,IAAI,EMbA,CNaG,CMbD,ANcV,IMjBiC;AAI/BH,AJHJ,ADxDc,ADwEVI,IAAAA,EMbAJ,AJHE4F,IFgBI,EAAE7F,EMbA,EAAE,ANaZ,CMjBiC,IJCd,GAAG,SAAlB6F,eAAkB,GAAM;AII1BlE,AJHF,ADzDY,ADwEIrB,IAAAA,EMZdqB,EJHImE,IFekB,CEfb,CFee,EEfZN,GFed,CMZgB,EAAE,EJHI,CAACO,CIGDvF,IAAI,CAACyD,CJH3B,MIGkB;AALe,ALvDrB,ADwEqB1D,IAAAA,CMjBxB,CAAD,CAAR,ONiB2C,EAAE;AMV9C,AJHC,AD3DY,ADwEZ,GMtBF,ANqBa,EAEX,GEdIuF,KAAJ,EAAW;AACTA,AD5DU,ADyEVzF,IAAAA,EEbAyF,IFaM,CEbD,CAACE,AFaEzE,KEbR,MFaF;AMTF,AJHIuE,AD7DU,ADyEWxF,IAAAA,EMTnBkH,AJHF1B,KAAK,CAACG,AFYuB,EAAE,KAAjC,CMTkB,GAAG,MJHnB,CAAwB,CAAxB,EAA2BH,KAAK,CAACI,IIGN,CJHA,CAAYC,MAAvC,IIGiC;AACnC,AJHEC,AD9DU,ADyE4B7F,IAAAA,CCrFL,CC0EjC6F,EIGE,CAACe,KJHK,AFWwC,CMRlD,AJHWd,CFWyC,CMRvC,SJHX,CAAqB,MAArB;AIIA,AJHD,AFUD,GAFW,EAGX;AMPC,AJHF,AD5EoC,ADsFjChG,GElBJ,CFkBIA,MAAM,EAAEH,aAAV;ACtFmC,ADsFVI,IAAAA,QAAQ,EAAE,IAAnC;AMLA,AJHF,AD9EqC,ADsFMC,IAAAA,IMLnCkH,MNK6C,EAAE,MERhD,IIGmB,GAAG,IAAIC,GAAJ,CAAQxI,MAAM,CAACC,MAAP,CAAc8H,AJH3C,OAAD,MIG8B,EAA6B5H,GAA7B,CAAiC,SJFlE,CIEkEsI,KAAK,uBJFtE,cAAD;AIEuE,AJFvD,AD/EiB,ADsFnC,GAHW,CEJO,AFIpB,OEJ2B,EAAEhC,kBAAzB;AAA6C,AD/EZ,ADyFrC,CCzFK,GC+E4C,KFU1C,IEVmD,AFU/CnF,EEViD,EFU7C,CAACE,sBEVuD,AFUhE,CAAgC;AMRoC,AJDvE4F,AFUFlG,IAAAA,EEVEkG,EFUE,EAAJlG,EEVQ,EAAEqF,AFS2B,qBMRwCkC,KAAK,CAACC,MAAN,CAAa5H,IAAjB,uDAAI,mBAAmB6H,QAAnB,EAAJ;AAAA,AJFJ,AFYrElH,IAAAA,CMVmC,AJFuB,CIE/B,CAA3B,CNUI,EAAEnB,0BAA0B,CAAC;AMTjC,AJHE,AFaAiC,MAAAA,KMVK0F,CNUC,EAAE,GMVG,CAACW,AJAV,MIAG,CAAc,UAAAH,KAAK,OJArB,WAAD;AIAsB,AJAT,ADIrB,ADOQnG,IEXa,ADIf8B,ICJmB,AFWjB9B,EEXkB,GIAQ,CAACiG,ANWrB,EAANjG,gBMX6C,CAACuG,ELIjB,CKJF,CAAuBJ,CLIlB,IKJuB,CAACvC,ILI1D9B,OKJ6B,CAAL,uBLIU;AKJV,AJAtB,ADIgC,ADM1B,IEbR,CIGK,AJJF,CIIL,ALKFC,KADsC,SCFlC,ADGJA,KADsC,wBCFjC,IAAD,qBACE,6BAAC,OAAD,qBACE,6BAAC,WAAD;AIHP,AJGoB,ADAiB,ADKH,GMfZ,CJUF,CIHlB,ANQ+B,CMR9B0D,ALKJzD,ADCuC,KEHX,EAAEmC,MIH3B,ALGmC,EKHnBwB,MAAhB,CAPoB,ALYvB3D,CKZA,YLUsC;AKFtCO,AJEQ,ADA8B,ADUpC/C,EMZF+C,ENYE/C,ECPFyC,GKLO,CAACuE,GAAR,ANYW,CMZCR,CNYCvG,CCVyB,ECC5B,ODEVwC,GKLA,OLEsC,YCC3B,YAAD;AIFV,AJEwB,ADDc,ADGC,GAAhC,CEFiB,AFExB,GEF2B,EAAE8B,aIFtB,6BAAC,YAAD;AAAc,AJEX,ADD4B,ADYvC,IMbsB,AJCb,KIDkB,EAAC,QJGjB,GIHH,0BJGI,IAAD,qBACE,eDKE,cCLD,GAAD,CDKS3D,QAAP,YCJA,0CAAM0D,WAAN,CADF,oBAC2B,yCAD3B,CADF,eAIE,6BAAC,MAAD,qBACE,0CAAMD,SAAN,CADF,oBACyB,yCADzB,CAJF,CAFF,CADF,eAYE,6BAAC,UAAD;AIZ+B,AJYvB,ADHF,IKTyB,AJYvB,SAAS,EIZyB,IJY1C,WIZ4C,wHAE3C,CAACgC,mBAAD,gBAAuB,4DACnB,GADmB,eAEpB,6BAAC,UAAD;AAAQ,AJQM,ADHZ,ICGY,EIRN,GJQW,CIRP,KJQhB,CIRI;AAAa,AJQO,ADHlB,ICGkB,EIRP,KJQc,EIRP,AJQSzB,EIRP2B;AAAtB,AJQJ,ADHM,WCTR,CADF,aIG4B,CAAvB,CJcH,EITU,IAPoC,CAA7C,sBJgBA,UAAD;AIRK,AJQO,ADPJ,IKDH,AJQO,KIRF,EAAET,EJQS,EAAE,yBAAW;AIhBjC,AJiBDR,ADPAzE,KKDD,CAAA2F,AJQClB,MAAM,EAAEb,ADPR5D,MKDa,ILAL,GACKC,EKDd,IAAA0F,cAAc,OLCiBzF,IKD/B,SLCc,EADL,CKATyF,cAAc,CAAErB,MAAhB,iBAAyB,6BAAC,mBAAD,qBACtB,6BAAC,oBAAD;AAAW,AJMqB,ADJlCnE,IKFa,CJMU,IINL,EAAEwF,GLEpBxF,WAHQ,GAGM,IAAIxB,IAAI,CAACyB,WAAT,EAHN;AKCN,AJMF,ADPQ,IKAgB,CAAzB,GAE0BgG,SAXxB,CAAP,AJmBQ,6BAAC,SAAD;AINT,AJMgB,ADVD,CK1CT,GJoDU,GAAG,EAAEzC,QAAZ,IDLyB3D,UAAU,CAACK,iCAAX,CAC/Ba,8BAAexD,IADgB,CALnB;ACUgB,IAAA,KAAK,YAAK+F,WAAL,kBAA3B;AAA4D,ADVtD,ICUsD,KAAK,EAAEF,WAAnE;AAAgF,ADLlFpC,ICKkF,QAAQ,EDL1FA,ICKE,cDVM;ACUmF,ADDjGhB,ICCiG,OAAO,GDDxGA,WAAW,CCC+F,ADD9FK,GAAZ,CACE7B,IAAI,CAAC8B,aAAL,CAAmBC,MCAsF,ODAzG,CAAiC,GCAuE;AAAa,ADCnHC,MCDmH,OAAO,EAAEqD,CDC5HrD,UAAU,EAAEe,KAAK,CAACd,SADa;ACAuE,ADEtGC,gBAAAA,ICDU,YDCM,EAAEe,UAAU,CAAChB,ICDlB,KDDoB,GCCrB;AAAU,ADEpBE,MCFoB,IAAI,EAAC,IDEzBA,QAAQ,EAAEK,kBAHqB;ACCrB,ADGVJ,MCJsG,UDItGA,KAAK,EAAEG,8BAAexD,IAJS;ACA3B,ADKJyB,ICRE,CAjBF,CANG,CAAP,SD+BIA,SAAS,EAAEC;ACChB,ADNoC,CCxD9B,cDwDH,CADF;AAUAe,cAAAA,WAAW,CAACK,GAAZ,CACE,gDAA6B;AAC3BlB,gBAAAA,OAAO,EAAEsC,UAAU,CAAChB,SADO;AAE3BzC,gBAAAA,IAAI,EAAEwD,aAFqB;AAG3BpC,gBAAAA,KAAK,EAAEmC,KAAK,CAACd;AAHc,eAA7B,CADF;AAnBc,gDA2BPb,QAAQ,mCACZqB,uBADY,EACC;AACZC,gBAAAA,MAAM,EAAEC,kCADI;AAEZnB,gBAAAA,WAAW,EAAXA,WAFY;AAGZa,gBAAAA,OAAO,EAAE,CAACU,KAAD,EAAQE,UAAR,CAHG;AAIZL,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,mBAAmB,EAAE;AADd;AAJG,eADD,EA3BD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARwB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxC;;AA+CO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,YAAD;AAAA,SAA4C,UAC5E/B,QAD4E,EAE5EgC,QAF4E,EAGzE;AACH,QAAMC,YAAY,GAAGD,QAAQ,GAAGjD,IAAX,CAAgBmD,UAAhB,CAA2B3C,OAAhD;;AAEA,QAAI,CAAC0C,YAAL,EAAmB;AACjB;AACAE,MAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb;AACD;;AAED,WAAOpC,QAAQ,CACb0B,+BAA+B,CAAC;AAC9BC,MAAAA,KAAK,EAAEM,YADuB;AAE9BL,MAAAA,aAAa,EAAEG,YAFe;AAG9BF,MAAAA,UAAU,EAAE,IAAIjD,IAAI,CAACyD,OAAT;AAHkB,KAAD,CADlB,CAAf;AAOD,GAlBiC;AAAA,CAA3B","file":"AddCoinModal.4b79d9b5.js","sourceRoot":"../src","sourcesContent":["import * as web3 from '@solana/web3.js';\nimport * as BufferLayout from 'buffer-layout';\n\nimport { TOKEN_PROGRAM_ID } from 'constants/solana/bufferLayouts';\n\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(\n  0,\n  BufferLayout.struct([\n    BufferLayout.u8('decimals'),\n    BufferLayout.blob(32, 'mintAuthority'),\n    BufferLayout.u8('freezeAuthorityOption'),\n    BufferLayout.blob(32, 'freezeAuthority'),\n  ]),\n  'initializeMint',\n);\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(3, BufferLayout.struct([BufferLayout.nu64('amount')]), 'transfer');\nLAYOUT.addVariant(7, BufferLayout.struct([BufferLayout.nu64('amount')]), 'mintTo');\nLAYOUT.addVariant(8, BufferLayout.struct([BufferLayout.nu64('amount')]), 'burn');\nLAYOUT.addVariant(9, BufferLayout.struct([]), 'closeAccount');\n\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\n\nfunction encodeTokenInstructionData(instruction) {\n  const b = Buffer.alloc(instructionMaxSpan);\n  const span = LAYOUT.encode(instruction, b);\n  return b.slice(0, span);\n}\n\nexport function initializeMintInstruction({\n  mint,\n  decimals,\n  mintAuthority,\n  freezeAuthority,\n}: {\n  mint: web3.PublicKey;\n  decimals: number;\n  mintAuthority: web3.PublicKey;\n  freezeAuthority?: web3.PublicKey;\n}) {\n  const keys = [\n    { pubkey: mint, isSigner: false, isWritable: true },\n    { pubkey: web3.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n  ];\n\n  return new web3.TransactionInstruction({\n    keys,\n    data: encodeTokenInstructionData({\n      initializeMint: {\n        decimals,\n        mintAuthority: mintAuthority.toBuffer(),\n        freezeAuthorityOption: !!freezeAuthority,\n        freezeAuthority: (freezeAuthority || new web3.PublicKey()).toBuffer(),\n      },\n    }),\n    programId: TOKEN_PROGRAM_ID,\n  });\n}\n\nexport function initializeAccountInstruction({\n  account,\n  mint,\n  owner,\n}: {\n  account: web3.PublicKey;\n  mint: web3.PublicKey;\n  owner: web3.PublicKey;\n}) {\n  const keys = [\n    { pubkey: account, isSigner: false, isWritable: true },\n    { pubkey: mint, isSigner: false, isWritable: false },\n    { pubkey: owner, isSigner: false, isWritable: false },\n    { pubkey: web3.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n  ];\n\n  return new web3.TransactionInstruction({\n    keys,\n    data: encodeTokenInstructionData({\n      initializeAccount: {},\n    }),\n    programId: TOKEN_PROGRAM_ID,\n  });\n}\n\nexport function mintToInstruction({\n  mint,\n  destination,\n  amount,\n  mintAuthority,\n}: {\n  mint: web3.PublicKey;\n  destination: web3.PublicKey;\n  amount: number;\n  mintAuthority: web3.PublicKey;\n}) {\n  const keys = [\n    { pubkey: mint, isSigner: false, isWritable: true },\n    { pubkey: destination, isSigner: false, isWritable: true },\n    { pubkey: mintAuthority, isSigner: true, isWritable: false },\n  ];\n\n  return new web3.TransactionInstruction({\n    keys,\n    data: encodeTokenInstructionData({\n      mintTo: {\n        amount,\n      },\n    }),\n    programId: TOKEN_PROGRAM_ID,\n  });\n}\n","import * as web3 from '@solana/web3.js';\n\nimport { ACCOUNT_LAYOUT, MINT_LAYOUT, TOKEN_PROGRAM_ID } from 'constants/solana/bufferLayouts';\nimport { mintTestTokenAsyncAction } from 'store/commands';\nimport { SOLANA_API } from 'store/middlewares';\nimport { ApiSolanaService } from 'store/middlewares/solana-api/services';\nimport { AppThunk } from 'store/types';\nimport {\n  initializeAccountInstruction,\n  initializeMintInstruction,\n  mintToInstruction,\n} from 'store/utils/instructions/tokenProgram';\n\nexport const createAndInitializeMint = ({\n  owner, // Account for paying fees and allowed to mint new tokens\n  mint, // Account to hold token information\n  amount, // Number of tokens to issue\n  decimals,\n  initialAccount, // Account to hold newly issued tokens, if amount > 0\n}: {\n  owner: web3.Account;\n  mint: web3.Account;\n  amount: number;\n  decimals: number;\n  initialAccount: web3.Account;\n}): AppThunk => async (dispatch) => {\n  const connection = ApiSolanaService.getConnection();\n\n  const transaction = new web3.Transaction();\n\n  const lamportsForMint = await connection.getMinimumBalanceForRentExemption(MINT_LAYOUT.span);\n\n  transaction.add(\n    web3.SystemProgram.createAccount({\n      fromPubkey: owner.publicKey,\n      newAccountPubkey: mint.publicKey,\n      lamports: lamportsForMint,\n      space: MINT_LAYOUT.span,\n      programId: TOKEN_PROGRAM_ID,\n    }),\n  );\n\n  transaction.add(\n    initializeMintInstruction({\n      mint: mint.publicKey,\n      decimals,\n      mintAuthority: owner.publicKey,\n    }),\n  );\n\n  const signers = [owner, mint];\n\n  if (amount > 0) {\n    signers.push(initialAccount);\n\n    const lamportsForAccount = await connection.getMinimumBalanceForRentExemption(\n      ACCOUNT_LAYOUT.span,\n    );\n\n    transaction.add(\n      web3.SystemProgram.createAccount({\n        fromPubkey: owner.publicKey,\n        newAccountPubkey: initialAccount.publicKey,\n        lamports: lamportsForAccount,\n        space: ACCOUNT_LAYOUT.span,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n    );\n\n    transaction.add(\n      initializeAccountInstruction({\n        account: initialAccount.publicKey,\n        mint: mint.publicKey,\n        owner: owner.publicKey,\n      }),\n    );\n\n    transaction.add(\n      mintToInstruction({\n        mint: mint.publicKey,\n        destination: initialAccount.publicKey,\n        amount,\n        mintAuthority: owner.publicKey,\n      }),\n    );\n  }\n\n  return dispatch({\n    [SOLANA_API]: {\n      action: mintTestTokenAsyncAction,\n      transaction,\n      signers,\n      options: {\n        preflightCommitment: 'single',\n      },\n    },\n  });\n};\n\nconst createAndInitializeTokenAccount = ({\n  payer,\n  mintPublicKey,\n  newAccount,\n}: {\n  payer: web3.Account;\n  mintPublicKey: web3.PublicKey;\n  newAccount: web3.Account;\n}): AppThunk => async (dispatch) => {\n  const connection = ApiSolanaService.getConnection();\n\n  const transaction = new web3.Transaction();\n\n  const lamportsForAccount = await connection.getMinimumBalanceForRentExemption(\n    ACCOUNT_LAYOUT.span,\n  );\n\n  transaction.add(\n    web3.SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: newAccount.publicKey,\n      lamports: lamportsForAccount,\n      space: ACCOUNT_LAYOUT.span,\n      programId: TOKEN_PROGRAM_ID,\n    }),\n  );\n\n  transaction.add(\n    initializeAccountInstruction({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: payer.publicKey,\n    }),\n  );\n\n  return dispatch({\n    [SOLANA_API]: {\n      action: mintTestTokenAsyncAction,\n      transaction,\n      signers: [payer, newAccount],\n      options: {\n        preflightCommitment: 'single',\n      },\n    },\n  });\n};\n\nexport const createTokenAccount = (tokenAddress: web3.PublicKey): AppThunk => (\n  dispatch,\n  getState,\n) => {\n  const ownerAccount = getState().data.blockchain.account;\n\n  if (!ownerAccount) {\n    // TODO: check auth\n    console.info('TODO: check auth');\n  }\n\n  return dispatch(\n    createAndInitializeTokenAccount({\n      payer: ownerAccount,\n      mintPublicKey: tokenAddress,\n      newAccount: new web3.Account(),\n    }),\n  );\n};\n","import React, { FunctionComponent, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as web3 from '@solana/web3.js';\nimport classNames from 'classnames';\nimport { styled } from 'linaria/react';\nimport { rgba } from 'polished';\nimport { Avatar, Button, Icon, Input } from 'components/ui';\nimport { TokenType } from 'constants/tokens';\nimport { createTokenAccount } from 'store/actions/complex/tokens';\nconst Wrapper = /*#__PURE__*/styled(\"div\")({\n  name: \"Wrapper\",\n  class: \"Wrapper_w2hsup5\"\n});\nconst ChevronWrapper = /*#__PURE__*/styled(\"div\")({\n  name: \"ChevronWrapper\",\n  class: \"ChevronWrapper_cjk37vx\"\n});\nconst ChevronIcon = /*#__PURE__*/styled(Icon)({\n  name: \"ChevronIcon\",\n  class: \"ChevronIcon_c1aewuyh\"\n});\nconst Main = /*#__PURE__*/styled(\"div\")({\n  name: \"Main\",\n  class: \"Main_m1x0i73s\"\n});\nconst Content = /*#__PURE__*/styled(\"div\")({\n  name: \"Content\",\n  class: \"Content_c1lrr91s\"\n});\nconst InfoWrapper = /*#__PURE__*/styled(\"div\")({\n  name: \"InfoWrapper\",\n  class: \"InfoWrapper_ifuaxgh\"\n});\nconst AvatarStyled = /*#__PURE__*/styled(Avatar)({\n  name: \"AvatarStyled\",\n  class: \"AvatarStyled_asx2g64\"\n});\nconst Info = /*#__PURE__*/styled(\"div\")({\n  name: \"Info\",\n  class: \"Info_i10180ct\"\n});\nconst Top = /*#__PURE__*/styled(\"div\")({\n  name: \"Top\",\n  class: \"Top_t1idmxl7\"\n});\nconst Bottom = /*#__PURE__*/styled(\"div\")({\n  name: \"Bottom\",\n  class: \"Bottom_b5vkidx\"\n});\nconst Additional = /*#__PURE__*/styled(\"div\")({\n  name: \"Additional\",\n  class: \"Additional_ajtzobz\"\n});\nconst CopyWrapper = /*#__PURE__*/styled(\"div\")({\n  name: \"CopyWrapper\",\n  class: \"CopyWrapper_cr7kpio\"\n});\nconst CopyIcon = /*#__PURE__*/styled(Icon)({\n  name: \"CopyIcon\",\n  class: \"CopyIcon_c1n4pegg\"\n});\nexport const TokenRow: FunctionComponent<TokenType> = ({\n  mintAddress,\n  tokenName,\n  tokenSymbol,\n  icon\n}) => {\n  const dispatch = useDispatch(); // eslint-disable-next-line unicorn/no-null\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleChevronClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleAddClick = () => {\n    const mint = new web3.PublicKey(mintAddress);\n    dispatch(createTokenAccount(mint));\n  };\n\n  const handleCopyClick = () => {\n    const input = inputRef.current;\n\n    if (input) {\n      input.focus();\n      input.setSelectionRange(0, input.value.length);\n      document.execCommand('copy');\n    }\n  };\n\n  return <Wrapper>\n      <ChevronWrapper onClick={handleChevronClick} className={classNames({\n      opened: isOpen\n    })}>\n        <ChevronIcon name=\"chevron\" />\n      </ChevronWrapper>\n      <Main>\n        <Content>\n          <InfoWrapper onClick={handleChevronClick}>\n            <AvatarStyled src={icon} />\n            <Info>\n              <Top>\n                <div>{tokenSymbol}</div> <div />\n              </Top>\n              <Bottom>\n                <div>{tokenName}</div> <div />\n              </Bottom>\n            </Info>\n          </InfoWrapper>\n          <Button secondary small onClick={handleAddClick}>\n            Add\n          </Button>\n        </Content>\n        <Additional className={classNames({\n        opened: isOpen\n      })}>\n          <Input ref={inputRef} title={`${tokenSymbol} Mint Address`} value={mintAddress} readOnly postfix={<CopyWrapper onClick={handleCopyClick}>\n                <CopyIcon name=\"copy\" />\n              </CopyWrapper>} />\n        </Additional>\n      </Main>\n    </Wrapper>;\n};","export { TokenRow } from './TokenRow';\n","import React, { FunctionComponent } from 'react';\nimport { styled } from 'linaria/react';\nimport { TokenType } from 'constants/tokens';\nimport { TokenRow } from '../TokenRow';\nconst Wrapper = /*#__PURE__*/styled(\"div\")({\n  name: \"Wrapper\",\n  class: \"Wrapper_w1wf7dhi\"\n});\ntype Props = {\n  items?: TokenType[]; // TODO: not any\n\n};\nexport const TokenList: FunctionComponent<Props> = ({\n  items\n}) => {\n  if (!items) {\n    return null;\n  }\n\n  return <Wrapper>\n      {items.map(item => <TokenRow key={item.mintAddress} {...item} />)}\n    </Wrapper>;\n};","export { TokenList } from './TokenList';\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as web3 from '@solana/web3.js';\nimport { styled } from 'linaria/react';\nimport { Modal } from 'components/common/Modal';\nimport { Button } from 'components/ui';\nimport { TOKENS_BY_ENTRYPOINT } from 'constants/tokens';\nimport { createAndInitializeMint } from 'store/actions/complex/tokens';\nimport { RootState } from 'store/types';\nimport { TokenList } from './TokenList';\nconst WrapperModal = /*#__PURE__*/styled(Modal)({\n  name: \"WrapperModal\",\n  class: \"WrapperModal_wiqml5\"\n});\nconst ScrollableContainer = /*#__PURE__*/styled(\"div\")({\n  name: \"ScrollableContainer\",\n  class: \"ScrollableContainer_s17ynaak\"\n}); // const ITEMS = [\n//   {\n//     symbol: 'SRM',\n//     name: 'Serum',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'MSRM',\n//     name: 'MegaSerum',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'BTC',\n//     name: 'Wrapped Bitcoin',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'ETH',\n//     name: 'Wrapped Ethereum',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'FTT',\n//     name: 'Wrapped FTT',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'YFI',\n//     name: 'Wrapped YFI',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n//   {\n//     symbol: 'YFI',\n//     name: 'Wrapped YFI',\n//     price: '$0.887832',\n//     delta: '+16.9% for 24hrs',\n//   },\n// ];\n\ntype Props = {\n  close: () => void;\n};\nexport const AddCoinModal: FunctionComponent<Props> = ({\n  close\n}) => {\n  const dispatch = useDispatch();\n  const ownerAccount = useSelector((state: RootState) => state.data.blockchain.account);\n  const entrypoint = useSelector((state: RootState) => state.data.blockchain.entrypoint);\n  const tokenAccounts = useSelector((state: RootState) => state.entities.tokens.items);\n  const tokens = TOKENS_BY_ENTRYPOINT[entrypoint];\n  const isMainnetEntrypoint = entrypoint === web3.clusterApiUrl('mainnet-beta');\n\n  const handleMintTestTokenClick = () => {\n    if (!ownerAccount) {\n      return;\n    }\n\n    dispatch(createAndInitializeMint({\n      owner: ownerAccount,\n      mint: new web3.Account(),\n      amount: 1000,\n      decimals: 2,\n      initialAccount: new web3.Account()\n    }));\n  };\n\n  const filteredTokens = useMemo(() => {\n    if (!tokens) {\n      return;\n    }\n\n    const existsMintAccounts = new Set(Object.values(tokenAccounts).map(token => token.parsed.mint?.toBase58()));\n    return tokens.filter(token => !existsMintAccounts.has(token.mintAddress));\n  }, [tokenAccounts, tokens]);\n  console.log(filteredTokens);\n  return <WrapperModal title=\"Add coins\" description={<>\n          Add a token to your wallet. This will cost 0.002039 SOL.\n          {!isMainnetEntrypoint ? <>\n              {' '}\n              <Button link onClick={handleMintTestTokenClick}>\n                Mint test token\n              </Button>\n            </> : null}\n        </>} close={close}>\n      {filteredTokens?.length ? <ScrollableContainer>\n          <TokenList items={filteredTokens} />\n        </ScrollableContainer> : undefined}\n    </WrapperModal>;\n};","// eslint-disable-next-line import/no-default-export\nexport { AddCoinModal as default } from './AddCoinModal';\n"]}