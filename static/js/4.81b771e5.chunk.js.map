{"version":3,"sources":["components/modals/TransactionInfoModals/common/styled.ts","components/modals/TransactionInfoModals/TransactionDetailsModal/TransactionDetailsModal.tsx"],"names":["Wrapper","Header","Title","Desc","CloseWrapper","CloseIcon","BlockWrapper","CheckmarkIcon","OtherIcon","ProgressWrapper","Content","SendWrapper","ValueCurrency","ValueOriginal","SwapWrapper","SwapColumn","SwapInfo","SwapBlock","SwapIcon","SwapAmount","FieldsWrapper","FieldWrapper","FieldTitle","FieldValue","CopyIcon","CopyWrapper","Footer","ButtonExplorer","StatusWrapper","Status","StatusIndicator","FieldRowWrapper","ColumnWrapper","FieldInfo","AddressWrapper","AddressTitle","AddressValue","TransactionDetailsModal","close","dispatch","useDispatch","useState","transaction","useSelector","state","Transaction","tokenAccounts","useEffect","mount","a","unwrapResult","getTransaction","setTimeout","details","useMemo","publicKey","date","dayjs","title","onClick","name","prefix","symbol","value","size","isShowDetails","shortAddress","navigator","ToastManager","error","console","className","classNames","isCentered","lightGray","setShowDetails"],"mappings":"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","file":"static/js/4.81b771e5.chunk.js","sourcesContent":["import { styled } from '@linaria/react';\nimport { rgba } from 'polished';\n\nimport { Button, Icon } from 'components/ui';\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-basis: 524px;\n  flex-direction: column;\n  overflow: hidden;\n\n  background: #fff;\n\n  border-radius: 15px;\n`;\n\nexport const Header = styled.div`\n  position: relative;\n\n  padding: 26px 20px 50px;\n\n  text-align: center;\n`;\n\nexport const Title = styled.div`\n  margin-bottom: 10px;\n\n  color: #000;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 100%;\n  text-transform: capitalize;\n`;\n\nexport const Desc = styled.div`\n  color: #a3a5ba;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 100%;\n`;\n\nexport const CloseWrapper = styled.div`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n\n  background: #f6f6f8;\n  border-radius: 8px;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n\n  color: #a3a5ba;\n`;\n\nexport const BlockWrapper = styled.div`\n  position: absolute;\n  bottom: -28px;\n  left: 50%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 55px;\n  height: 55px;\n  margin-left: -27px;\n\n  background: #5887ff;\n  border-radius: 12px;\n\n  &.isProcessing {\n    background: #ffd177;\n  }\n\n  &.isSuccess {\n    background: #77db7c;\n  }\n\n  &.isError {\n    background: #f77;\n  }\n`;\n\nexport const CheckmarkIcon = styled(Icon)`\n  width: 45px;\n  height: 45px;\n\n  color: #fff;\n`;\n\nexport const OtherIcon = styled(Icon)`\n  width: 37px;\n  height: 37px;\n\n  color: #fff;\n`;\n\nexport const ProgressWrapper = styled.div`\n  height: 1px;\n\n  background: rgba(0, 0, 0, 0.05);\n`;\n\nexport const Content = styled.div``;\n\nexport const SendWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 40px 0 20px;\n`;\n\nexport const ValueCurrency = styled.div`\n  color: #000;\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 120%;\n`;\n\nexport const ValueOriginal = styled.div`\n  margin-top: 4px;\n\n  color: #a3a5ba;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 120%;\n`;\n\nexport const SwapWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin: 70px 0 40px;\n`;\n\nexport const SwapColumn = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n\n  &:not(:first-child) {\n    justify-content: flex-start;\n  }\n\n  &:not(:last-child) {\n    justify-content: flex-end;\n  }\n`;\n\nexport const SwapInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SwapBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 32px;\n  height: 32px;\n  margin: 6px 26px 0;\n\n  background: #f6f6f8;\n  border-radius: 12px;\n`;\n\nexport const SwapIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: #a3a5ba;\n`;\n\nexport const SwapAmount = styled.div`\n  margin-top: 10px;\n\n  color: #000;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 120%;\n`;\n\nexport const FieldsWrapper = styled.div``;\n\nexport const FieldWrapper = styled.div`\n  padding: 16px 30px;\n\n  &:first-child {\n    border-top: 1px solid ${rgba('#000', 0.05)};\n  }\n\n  &:not(:last-child) {\n    border-bottom: 1px solid ${rgba('#000', 0.05)};\n  }\n`;\n\nexport const FieldTitle = styled.div`\n  color: #a3a5ba;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nexport const FieldValue = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 3px;\n\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 21px;\n`;\n\nexport const CopyIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: #a3a5ba;\n`;\n\nexport const CopyWrapper = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  margin-left: 20px;\n\n  background: rgba(163, 165, 186, 0.1);\n  border-radius: 8px;\n  cursor: pointer;\n\n  &:hover {\n    background: #eff3ff;\n\n    ${CopyIcon} {\n      color: #5887ff;\n    }\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 24px 20px;\n\n  border-top: 1px solid ${rgba('#000', 0.05)};\n\n  & > :not(:last-child) {\n    margin-right: 16px;\n  }\n\n  &.isCentered {\n    justify-content: center;\n  }\n`;\n\nexport const ButtonExplorer = styled(Button)`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 150%;\n`;\n","import React, { FunctionComponent, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { styled } from '@linaria/react';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { PublicKey, TransactionSignature } from '@solana/web3.js';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\n\nimport { Transaction } from 'api/transaction/Transaction';\nimport { AmountUSD } from 'components/common/AmountUSD';\nimport { ToastManager } from 'components/common/ToastManager';\nimport { TokenAvatar } from 'components/common/TokenAvatar';\nimport { getTransaction } from 'store/slices/transaction/TransactionSlice';\nimport { shortAddress } from 'utils/tokens';\n\nimport {\n  BlockWrapper,\n  ButtonExplorer,\n  CloseIcon,\n  CloseWrapper,\n  Content,\n  CopyIcon,\n  CopyWrapper,\n  Desc,\n  FieldsWrapper,\n  FieldTitle,\n  FieldValue,\n  FieldWrapper,\n  Footer,\n  Header,\n  OtherIcon,\n  ProgressWrapper,\n  SendWrapper,\n  SwapAmount,\n  SwapBlock,\n  SwapColumn,\n  SwapIcon,\n  SwapInfo,\n  SwapWrapper,\n  Title,\n  ValueCurrency,\n  ValueOriginal,\n  Wrapper,\n} from '../common/styled';\n\nconst StatusWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nconst Status = styled.div`\n  display: flex;\n  align-items: center;\n  height: 32px;\n  padding: 2px 10px;\n\n  color: #a3a5ba;\n  font-weight: 600;\n  font-size: 13px;\n  line-height: 20px;\n\n  background: rgba(246, 246, 248, 0.5);\n  border-radius: 6px;\n`;\n\nconst StatusIndicator = styled.div`\n  width: 8px;\n  height: 8px;\n  margin-right: 6px;\n\n  background: #77db7c;\n  border-radius: 2px;\n`;\n\nconst FieldRowWrapper = styled(FieldWrapper)`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 36px;\n`;\n\nconst ColumnWrapper = styled.div``;\n\nconst FieldInfo = styled.div`\n  display: flex;\n  margin-top: 15px;\n`;\n\nconst AddressWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 9px 0 12px;\n`;\n\nconst AddressTitle = styled.div`\n  color: #000;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst AddressValue = styled.div`\n  color: #a3a5ba;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 16px;\n`;\n\ntype Props = {\n  signature: TransactionSignature;\n  source: PublicKey;\n  close: () => void;\n};\n\nconst handleCopyClick = (publicKey: string) => () => {\n  try {\n    void navigator.clipboard.writeText(publicKey);\n    ToastManager.info('Copied to buffer!');\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const TransactionDetailsModal: FunctionComponent<Props> = ({ signature, source, close }) => {\n  const dispatch = useDispatch();\n  const [isShowDetails, setShowDetails] = useState(false);\n  const transaction = useSelector(\n    (state) =>\n      state.transaction.items[signature] && Transaction.from(state.transaction.items[signature]),\n  );\n  const tokenAccounts = useSelector((state) => state.wallet.tokenAccounts);\n\n  useEffect(() => {\n    const mount = async () => {\n      const trx = unwrapResult(await dispatch(getTransaction(signature)));\n\n      if (!trx) {\n        setTimeout(mount, 3000);\n      }\n    };\n\n    if (!transaction) {\n      void mount();\n    }\n  }, [signature]);\n\n  const details = useMemo(() => {\n    if (!transaction) {\n      return null;\n    }\n\n    return transaction.details(transaction.short.destination?.equals(source));\n  }, [transaction?.short.destination, tokenAccounts]);\n\n  if (!details || !transaction) {\n    return null;\n  }\n\n  const handleToggleShowDetailsClick = () => {\n    setShowDetails((state) => !state);\n  };\n\n  const renderFromTo = () => {\n    if (details.type === 'swap') {\n      return (\n        <>\n          {details.sourceTokenAccount ? (\n            <FieldWrapper>\n              <FieldTitle>From</FieldTitle>\n              <FieldValue>{details.sourceTokenAccount.address.toBase58()}</FieldValue>\n            </FieldWrapper>\n          ) : undefined}\n          {details.destinationTokenAccount ? (\n            <FieldWrapper>\n              <FieldTitle>To</FieldTitle>\n              <FieldValue>{details.destinationTokenAccount.address.toBase58()}</FieldValue>\n            </FieldWrapper>\n          ) : undefined}\n        </>\n      );\n    }\n\n    return (\n      <FieldRowWrapper>\n        {details.sourceTokenAccount ? (\n          <ColumnWrapper>\n            <FieldTitle>From</FieldTitle>\n            <FieldInfo>\n              <TokenAvatar symbol={details.sourceTokenAccount.mint.symbol} size={48} />\n              <AddressWrapper>\n                <AddressTitle>{details.sourceTokenAccount.mint.symbol}</AddressTitle>\n                <AddressValue>\n                  {shortAddress(details.sourceTokenAccount.address.toBase58())}\n                </AddressValue>\n              </AddressWrapper>\n            </FieldInfo>\n          </ColumnWrapper>\n        ) : undefined}\n        {details.destinationTokenAccount ? (\n          <ColumnWrapper>\n            <FieldTitle>To</FieldTitle>\n            <FieldInfo>\n              <TokenAvatar symbol={details.destinationTokenAccount.mint.symbol} size={48} />\n              <AddressWrapper>\n                <AddressTitle>{details.destinationTokenAccount.mint.symbol}</AddressTitle>\n                <AddressValue>\n                  {shortAddress(details.destinationTokenAccount.address.toBase58())}\n                </AddressValue>\n              </AddressWrapper>\n            </FieldInfo>\n          </ColumnWrapper>\n        ) : undefined}\n      </FieldRowWrapper>\n    );\n  };\n\n  const date = transaction.timestamp\n    ? dayjs.unix(transaction.timestamp).format('LLL')\n    : `${transaction.slot} SLOT`;\n\n  return (\n    <Wrapper>\n      <Header>\n        <Title>{details.type}</Title>\n        <Desc title={`${transaction.slot} SLOT`}>{date}</Desc>\n        <CloseWrapper onClick={close}>\n          <CloseIcon name=\"close\" />\n        </CloseWrapper>\n        <BlockWrapper>{details.icon ? <OtherIcon name={details.icon} /> : undefined}</BlockWrapper>\n      </Header>\n      <ProgressWrapper />\n      <Content>\n        {details.typeOriginal === 'transfer' ? (\n          <SendWrapper>\n            <ValueCurrency>\n              {details.isReceiver ? '+' : '-'} {details.sourceAmount.toNumber()}{' '}\n              {details.sourceToken?.symbol}\n            </ValueCurrency>\n            <ValueOriginal>\n              <AmountUSD\n                prefix={details.isReceiver ? '+' : '-'}\n                symbol={details.sourceToken?.symbol}\n                value={details.sourceAmount}\n              />\n            </ValueOriginal>\n          </SendWrapper>\n        ) : undefined}\n        {details.type === 'swap' ? (\n          <SwapWrapper>\n            <SwapColumn>\n              <SwapInfo>\n                <TokenAvatar size={44} symbol={details.sourceToken?.symbol} />\n                <SwapAmount>\n                  - {details.sourceAmount.toNumber()} {details.sourceToken?.symbol}\n                </SwapAmount>\n              </SwapInfo>\n            </SwapColumn>\n            <SwapBlock>\n              <SwapIcon name=\"swap\" />\n            </SwapBlock>\n            <SwapColumn>\n              <SwapInfo>\n                <TokenAvatar size={44} symbol={details.destinationToken?.symbol} />\n                <SwapAmount>\n                  + {details.destinationAmount.toNumber()} {details.destinationToken?.symbol}\n                </SwapAmount>\n              </SwapInfo>\n            </SwapColumn>\n          </SwapWrapper>\n        ) : undefined}\n        <StatusWrapper>\n          <Status>\n            <StatusIndicator /> Completed\n          </Status>\n        </StatusWrapper>\n        <FieldsWrapper>\n          {isShowDetails ? (\n            <>\n              {renderFromTo()}\n\n              <FieldWrapper>\n                <FieldTitle>Amount</FieldTitle>\n                <FieldValue>{details.amount.toNumber()}</FieldValue>\n              </FieldWrapper>\n              {transaction.meta ? (\n                <FieldWrapper>\n                  <FieldTitle>Transaction fee</FieldTitle>\n                  <FieldValue>{transaction.meta.fee} lamports</FieldValue>\n                </FieldWrapper>\n              ) : null}\n              <FieldWrapper>\n                <FieldTitle>Block number</FieldTitle>\n                <FieldValue>#{transaction.slot}</FieldValue>\n              </FieldWrapper>\n            </>\n          ) : undefined}\n          <FieldWrapper>\n            <FieldTitle>Transaction ID</FieldTitle>\n            <FieldValue>\n              {signature}{' '}\n              <CopyWrapper onClick={handleCopyClick(signature)}>\n                <CopyIcon name=\"copy\" />\n              </CopyWrapper>\n            </FieldValue>\n          </FieldWrapper>\n        </FieldsWrapper>\n      </Content>\n      <Footer className={classNames({ isCentered: true })}>\n        <ButtonExplorer lightGray onClick={handleToggleShowDetailsClick}>\n          {isShowDetails ? 'Hide transaction details' : 'Show transaction details'}\n        </ButtonExplorer>\n      </Footer>\n    </Wrapper>\n  );\n};\n"],"sourceRoot":""}